#define private public
#define protected public
#include "modules/MadGraphClassFilter.h"
#include "modules/MadGraphAnalysis.h"
#include "modules/MadGraphKtJetFinder.h"
#include "modules/MadGraphConeJetFinder.h"

#ifdef __CINT__

#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;

#pragma link C++ class MadGraphClassFilter+;
#pragma link C++ class MadGraphAnalysis+;
#pragma link C++ class MadGraphKtJetFinder+;
#pragma link C++ class MadGraphConeJetFinder+;

#endif
//
// File generated by rootcint at Wed Aug 21 11:56:11 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME tmpdImodulesdIModulesDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ModulesDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MadGraphClassFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MadGraphClassFilter(void *p = 0);
   static void *newArray_MadGraphClassFilter(Long_t size, void *p);
   static void delete_MadGraphClassFilter(void *p);
   static void deleteArray_MadGraphClassFilter(void *p);
   static void destruct_MadGraphClassFilter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MadGraphClassFilter*)
   {
      ::MadGraphClassFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MadGraphClassFilter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MadGraphClassFilter", ::MadGraphClassFilter::Class_Version(), "./modules/MadGraphClassFilter.h", 14,
                  typeid(::MadGraphClassFilter), DefineBehavior(ptr, ptr),
                  &::MadGraphClassFilter::Dictionary, isa_proxy, 4,
                  sizeof(::MadGraphClassFilter) );
      instance.SetNew(&new_MadGraphClassFilter);
      instance.SetNewArray(&newArray_MadGraphClassFilter);
      instance.SetDelete(&delete_MadGraphClassFilter);
      instance.SetDeleteArray(&deleteArray_MadGraphClassFilter);
      instance.SetDestructor(&destruct_MadGraphClassFilter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MadGraphClassFilter*)
   {
      return GenerateInitInstanceLocal((::MadGraphClassFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MadGraphClassFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MadGraphAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MadGraphAnalysis(void *p = 0);
   static void *newArray_MadGraphAnalysis(Long_t size, void *p);
   static void delete_MadGraphAnalysis(void *p);
   static void deleteArray_MadGraphAnalysis(void *p);
   static void destruct_MadGraphAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MadGraphAnalysis*)
   {
      ::MadGraphAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MadGraphAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MadGraphAnalysis", ::MadGraphAnalysis::Class_Version(), "./modules/MadGraphAnalysis.h", 15,
                  typeid(::MadGraphAnalysis), DefineBehavior(ptr, ptr),
                  &::MadGraphAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::MadGraphAnalysis) );
      instance.SetNew(&new_MadGraphAnalysis);
      instance.SetNewArray(&newArray_MadGraphAnalysis);
      instance.SetDelete(&delete_MadGraphAnalysis);
      instance.SetDeleteArray(&deleteArray_MadGraphAnalysis);
      instance.SetDestructor(&destruct_MadGraphAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MadGraphAnalysis*)
   {
      return GenerateInitInstanceLocal((::MadGraphAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MadGraphAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MadGraphKtJetFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MadGraphKtJetFinder(void *p = 0);
   static void *newArray_MadGraphKtJetFinder(Long_t size, void *p);
   static void delete_MadGraphKtJetFinder(void *p);
   static void deleteArray_MadGraphKtJetFinder(void *p);
   static void destruct_MadGraphKtJetFinder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MadGraphKtJetFinder*)
   {
      ::MadGraphKtJetFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MadGraphKtJetFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MadGraphKtJetFinder", ::MadGraphKtJetFinder::Class_Version(), "./modules/MadGraphKtJetFinder.h", 15,
                  typeid(::MadGraphKtJetFinder), DefineBehavior(ptr, ptr),
                  &::MadGraphKtJetFinder::Dictionary, isa_proxy, 4,
                  sizeof(::MadGraphKtJetFinder) );
      instance.SetNew(&new_MadGraphKtJetFinder);
      instance.SetNewArray(&newArray_MadGraphKtJetFinder);
      instance.SetDelete(&delete_MadGraphKtJetFinder);
      instance.SetDeleteArray(&deleteArray_MadGraphKtJetFinder);
      instance.SetDestructor(&destruct_MadGraphKtJetFinder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MadGraphKtJetFinder*)
   {
      return GenerateInitInstanceLocal((::MadGraphKtJetFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MadGraphKtJetFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MadGraphConeJetFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MadGraphConeJetFinder(void *p = 0);
   static void *newArray_MadGraphConeJetFinder(Long_t size, void *p);
   static void delete_MadGraphConeJetFinder(void *p);
   static void deleteArray_MadGraphConeJetFinder(void *p);
   static void destruct_MadGraphConeJetFinder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MadGraphConeJetFinder*)
   {
      ::MadGraphConeJetFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MadGraphConeJetFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MadGraphConeJetFinder", ::MadGraphConeJetFinder::Class_Version(), "./modules/MadGraphConeJetFinder.h", 18,
                  typeid(::MadGraphConeJetFinder), DefineBehavior(ptr, ptr),
                  &::MadGraphConeJetFinder::Dictionary, isa_proxy, 4,
                  sizeof(::MadGraphConeJetFinder) );
      instance.SetNew(&new_MadGraphConeJetFinder);
      instance.SetNewArray(&newArray_MadGraphConeJetFinder);
      instance.SetDelete(&delete_MadGraphConeJetFinder);
      instance.SetDeleteArray(&deleteArray_MadGraphConeJetFinder);
      instance.SetDestructor(&destruct_MadGraphConeJetFinder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MadGraphConeJetFinder*)
   {
      return GenerateInitInstanceLocal((::MadGraphConeJetFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MadGraphConeJetFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MadGraphClassFilter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MadGraphClassFilter::Class_Name()
{
   return "MadGraphClassFilter";
}

//______________________________________________________________________________
const char *MadGraphClassFilter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphClassFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MadGraphClassFilter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphClassFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MadGraphClassFilter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphClassFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MadGraphClassFilter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphClassFilter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MadGraphAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MadGraphAnalysis::Class_Name()
{
   return "MadGraphAnalysis";
}

//______________________________________________________________________________
const char *MadGraphAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MadGraphAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MadGraphAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MadGraphAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MadGraphKtJetFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MadGraphKtJetFinder::Class_Name()
{
   return "MadGraphKtJetFinder";
}

//______________________________________________________________________________
const char *MadGraphKtJetFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphKtJetFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MadGraphKtJetFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphKtJetFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MadGraphKtJetFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphKtJetFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MadGraphKtJetFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphKtJetFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MadGraphConeJetFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MadGraphConeJetFinder::Class_Name()
{
   return "MadGraphConeJetFinder";
}

//______________________________________________________________________________
const char *MadGraphConeJetFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphConeJetFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MadGraphConeJetFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MadGraphConeJetFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MadGraphConeJetFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphConeJetFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MadGraphConeJetFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MadGraphConeJetFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MadGraphClassFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class MadGraphClassFilter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MadGraphClassFilter::Class(),this);
   } else {
      R__b.WriteClassBuffer(MadGraphClassFilter::Class(),this);
   }
}

//______________________________________________________________________________
void MadGraphClassFilter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MadGraphClassFilter.
      TClass *R__cl = ::MadGraphClassFilter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilter", &fFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClassifier", &fClassifier);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fItParticle", &fItParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchParticle", &fBranchParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutputArray", &fOutputArray);
      ExRootModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MadGraphClassFilter(void *p) {
      return  p ? new(p) ::MadGraphClassFilter : new ::MadGraphClassFilter;
   }
   static void *newArray_MadGraphClassFilter(Long_t nElements, void *p) {
      return p ? new(p) ::MadGraphClassFilter[nElements] : new ::MadGraphClassFilter[nElements];
   }
   // Wrapper around operator delete
   static void delete_MadGraphClassFilter(void *p) {
      delete ((::MadGraphClassFilter*)p);
   }
   static void deleteArray_MadGraphClassFilter(void *p) {
      delete [] ((::MadGraphClassFilter*)p);
   }
   static void destruct_MadGraphClassFilter(void *p) {
      typedef ::MadGraphClassFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MadGraphClassFilter

//______________________________________________________________________________
void MadGraphAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class MadGraphAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MadGraphAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(MadGraphAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void MadGraphAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MadGraphAnalysis.
      TClass *R__cl = ::MadGraphAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputFileName", &fOutputFileName);
      R__insp.InspectMember(fOutputFileName, "fOutputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputArray", &fInputArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchEvent", &fBranchEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParticleHistogramsMap", (void*)&fParticleHistogramsMap);
      R__insp.InspectMember("map<TString,ParticleHistograms*>", (void*)&fParticleHistogramsMap, "fParticleHistogramsMap.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPairHistogramsMap", (void*)&fPairHistogramsMap);
      R__insp.InspectMember("map<TString,PairHistograms*>", (void*)&fPairHistogramsMap, "fPairHistogramsMap.", true);
      ExRootModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MadGraphAnalysis(void *p) {
      return  p ? new(p) ::MadGraphAnalysis : new ::MadGraphAnalysis;
   }
   static void *newArray_MadGraphAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::MadGraphAnalysis[nElements] : new ::MadGraphAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_MadGraphAnalysis(void *p) {
      delete ((::MadGraphAnalysis*)p);
   }
   static void deleteArray_MadGraphAnalysis(void *p) {
      delete [] ((::MadGraphAnalysis*)p);
   }
   static void destruct_MadGraphAnalysis(void *p) {
      typedef ::MadGraphAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MadGraphAnalysis

//______________________________________________________________________________
void MadGraphKtJetFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class MadGraphKtJetFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MadGraphKtJetFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(MadGraphKtJetFinder::Class(),this);
   }
}

//______________________________________________________________________________
void MadGraphKtJetFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MadGraphKtJetFinder.
      TClass *R__cl = ::MadGraphKtJetFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxParticleEta", &fMaxParticleEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinParticlePT", &fMinParticlePT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinJetPT", &fMinJetPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParameterR", &fParameterR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCollisionType", &fCollisionType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistanceScheme", &fDistanceScheme);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecombinationScheme", &fRecombinationScheme);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTowersList", (void*)&fTowersList);
      R__insp.InspectMember("vector<KtJet::KtLorentzVector>", (void*)&fTowersList, "fTowersList.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fJetsList", (void*)&fJetsList);
      R__insp.InspectMember("vector<KtJet::KtLorentzVector>", (void*)&fJetsList, "fJetsList.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fItParticle", &fItParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchParticle", &fBranchParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutputArray", &fOutputArray);
      ExRootModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MadGraphKtJetFinder(void *p) {
      return  p ? new(p) ::MadGraphKtJetFinder : new ::MadGraphKtJetFinder;
   }
   static void *newArray_MadGraphKtJetFinder(Long_t nElements, void *p) {
      return p ? new(p) ::MadGraphKtJetFinder[nElements] : new ::MadGraphKtJetFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_MadGraphKtJetFinder(void *p) {
      delete ((::MadGraphKtJetFinder*)p);
   }
   static void deleteArray_MadGraphKtJetFinder(void *p) {
      delete [] ((::MadGraphKtJetFinder*)p);
   }
   static void destruct_MadGraphKtJetFinder(void *p) {
      typedef ::MadGraphKtJetFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MadGraphKtJetFinder

//______________________________________________________________________________
void MadGraphConeJetFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class MadGraphConeJetFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MadGraphConeJetFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(MadGraphConeJetFinder::Class(),this);
   }
}

//______________________________________________________________________________
void MadGraphConeJetFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MadGraphConeJetFinder.
      TClass *R__cl = ::MadGraphConeJetFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinParticlePT", &fMinParticlePT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinJetPT", &fMinJetPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTowersList", (void*)&fTowersList);
      R__insp.InspectMember("vector<PhysicsTower>", (void*)&fTowersList, "fTowersList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fJetsList", (void*)&fJetsList);
      R__insp.InspectMember("vector<Cluster>", (void*)&fJetsList, "fJetsList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJetAlgo", &fJetAlgo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fItParticle", &fItParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchParticle", &fBranchParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutputArray", &fOutputArray);
      ExRootModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MadGraphConeJetFinder(void *p) {
      return  p ? new(p) ::MadGraphConeJetFinder : new ::MadGraphConeJetFinder;
   }
   static void *newArray_MadGraphConeJetFinder(Long_t nElements, void *p) {
      return p ? new(p) ::MadGraphConeJetFinder[nElements] : new ::MadGraphConeJetFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_MadGraphConeJetFinder(void *p) {
      delete ((::MadGraphConeJetFinder*)p);
   }
   static void deleteArray_MadGraphConeJetFinder(void *p) {
      delete [] ((::MadGraphConeJetFinder*)p);
   }
   static void destruct_MadGraphConeJetFinder(void *p) {
      typedef ::MadGraphConeJetFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MadGraphConeJetFinder

namespace ROOT {
   void vectorlEClustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEClustergR_Dictionary();
   static void *new_vectorlEClustergR(void *p = 0);
   static void *newArray_vectorlEClustergR(Long_t size, void *p);
   static void delete_vectorlEClustergR(void *p);
   static void deleteArray_vectorlEClustergR(void *p);
   static void destruct_vectorlEClustergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Cluster>*)
   {
      vector<Cluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Cluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Cluster>", -2, "prec_stl/vector", 49,
                  typeid(vector<Cluster>), DefineBehavior(ptr, ptr),
                  0, &vectorlEClustergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Cluster>) );
      instance.SetNew(&new_vectorlEClustergR);
      instance.SetNewArray(&newArray_vectorlEClustergR);
      instance.SetDelete(&delete_vectorlEClustergR);
      instance.SetDeleteArray(&deleteArray_vectorlEClustergR);
      instance.SetDestructor(&destruct_vectorlEClustergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Cluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Cluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEClustergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Cluster>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEClustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Cluster> : new vector<Cluster>;
   }
   static void *newArray_vectorlEClustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Cluster>[nElements] : new vector<Cluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEClustergR(void *p) {
      delete ((vector<Cluster>*)p);
   }
   static void deleteArray_vectorlEClustergR(void *p) {
      delete [] ((vector<Cluster>*)p);
   }
   static void destruct_vectorlEClustergR(void *p) {
      typedef vector<Cluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Cluster>

namespace ROOT {
   void vectorlEPhysicsTowergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPhysicsTowergR_Dictionary();
   static void *new_vectorlEPhysicsTowergR(void *p = 0);
   static void *newArray_vectorlEPhysicsTowergR(Long_t size, void *p);
   static void delete_vectorlEPhysicsTowergR(void *p);
   static void deleteArray_vectorlEPhysicsTowergR(void *p);
   static void destruct_vectorlEPhysicsTowergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<PhysicsTower>*)
   {
      vector<PhysicsTower> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PhysicsTower>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PhysicsTower>", -2, "prec_stl/vector", 49,
                  typeid(vector<PhysicsTower>), DefineBehavior(ptr, ptr),
                  0, &vectorlEPhysicsTowergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<PhysicsTower>) );
      instance.SetNew(&new_vectorlEPhysicsTowergR);
      instance.SetNewArray(&newArray_vectorlEPhysicsTowergR);
      instance.SetDelete(&delete_vectorlEPhysicsTowergR);
      instance.SetDeleteArray(&deleteArray_vectorlEPhysicsTowergR);
      instance.SetDestructor(&destruct_vectorlEPhysicsTowergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<PhysicsTower> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PhysicsTower>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPhysicsTowergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<PhysicsTower>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEPhysicsTowergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PhysicsTower> : new vector<PhysicsTower>;
   }
   static void *newArray_vectorlEPhysicsTowergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PhysicsTower>[nElements] : new vector<PhysicsTower>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPhysicsTowergR(void *p) {
      delete ((vector<PhysicsTower>*)p);
   }
   static void deleteArray_vectorlEPhysicsTowergR(void *p) {
      delete [] ((vector<PhysicsTower>*)p);
   }
   static void destruct_vectorlEPhysicsTowergR(void *p) {
      typedef vector<PhysicsTower> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<PhysicsTower>

/********************************************************
* tmp/modules/ModulesDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableModulesDict();

extern "C" void G__set_cpp_environmentModulesDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__cpp_reset_tagtableModulesDict();
}
#include <new>
extern "C" int G__cpp_dllrevModulesDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MadGraphClassFilter */
static int G__ModulesDict_445_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MadGraphClassFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphClassFilter[n];
     } else {
       p = new((void*) gvp) MadGraphClassFilter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphClassFilter;
     } else {
       p = new((void*) gvp) MadGraphClassFilter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MadGraphClassFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphClassFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MadGraphClassFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MadGraphClassFilter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MadGraphClassFilter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphClassFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphClassFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphClassFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_445_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphClassFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ModulesDict_445_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MadGraphClassFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MadGraphClassFilter(*(MadGraphClassFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MadGraphClassFilter G__TMadGraphClassFilter;
static int G__ModulesDict_445_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MadGraphClassFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MadGraphClassFilter*) (soff+(sizeof(MadGraphClassFilter)*i)))->~G__TMadGraphClassFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MadGraphClassFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MadGraphClassFilter*) (soff))->~G__TMadGraphClassFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ModulesDict_445_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MadGraphClassFilter* dest = (MadGraphClassFilter*) G__getstructoffset();
   *dest = *(MadGraphClassFilter*) libp->para[0].ref;
   const MadGraphClassFilter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MadGraphAnalysis */
static int G__ModulesDict_447_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MadGraphAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphAnalysis[n];
     } else {
       p = new((void*) gvp) MadGraphAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphAnalysis;
     } else {
       p = new((void*) gvp) MadGraphAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MadGraphAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MadGraphAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MadGraphAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MadGraphAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_447_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ModulesDict_447_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MadGraphAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MadGraphAnalysis(*(MadGraphAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MadGraphAnalysis G__TMadGraphAnalysis;
static int G__ModulesDict_447_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MadGraphAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MadGraphAnalysis*) (soff+(sizeof(MadGraphAnalysis)*i)))->~G__TMadGraphAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MadGraphAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MadGraphAnalysis*) (soff))->~G__TMadGraphAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MadGraphKtJetFinder */
static int G__ModulesDict_511_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MadGraphKtJetFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphKtJetFinder[n];
     } else {
       p = new((void*) gvp) MadGraphKtJetFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphKtJetFinder;
     } else {
       p = new((void*) gvp) MadGraphKtJetFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MadGraphKtJetFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphKtJetFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MadGraphKtJetFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MadGraphKtJetFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MadGraphKtJetFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphKtJetFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphKtJetFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphKtJetFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_511_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphKtJetFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ModulesDict_511_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MadGraphKtJetFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MadGraphKtJetFinder(*(MadGraphKtJetFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MadGraphKtJetFinder G__TMadGraphKtJetFinder;
static int G__ModulesDict_511_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MadGraphKtJetFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MadGraphKtJetFinder*) (soff+(sizeof(MadGraphKtJetFinder)*i)))->~G__TMadGraphKtJetFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MadGraphKtJetFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MadGraphKtJetFinder*) (soff))->~G__TMadGraphKtJetFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ModulesDict_511_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MadGraphKtJetFinder* dest = (MadGraphKtJetFinder*) G__getstructoffset();
   *dest = *(MadGraphKtJetFinder*) libp->para[0].ref;
   const MadGraphKtJetFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MadGraphConeJetFinder */
static int G__ModulesDict_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MadGraphConeJetFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphConeJetFinder[n];
     } else {
       p = new((void*) gvp) MadGraphConeJetFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MadGraphConeJetFinder;
     } else {
       p = new((void*) gvp) MadGraphConeJetFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MadGraphConeJetFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphConeJetFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MadGraphConeJetFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MadGraphConeJetFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MadGraphConeJetFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphConeJetFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphConeJetFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MadGraphConeJetFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ModulesDict_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MadGraphConeJetFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ModulesDict_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MadGraphConeJetFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MadGraphConeJetFinder(*(MadGraphConeJetFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MadGraphConeJetFinder G__TMadGraphConeJetFinder;
static int G__ModulesDict_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MadGraphConeJetFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MadGraphConeJetFinder*) (soff+(sizeof(MadGraphConeJetFinder)*i)))->~G__TMadGraphConeJetFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MadGraphConeJetFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MadGraphConeJetFinder*) (soff))->~G__TMadGraphConeJetFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ModulesDict_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MadGraphConeJetFinder* dest = (MadGraphConeJetFinder*) G__getstructoffset();
   *dest = *(MadGraphConeJetFinder*) libp->para[0].ref;
   const MadGraphConeJetFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MadGraphClassFilter */

/* MadGraphAnalysis */

/* MadGraphKtJetFinder */

/* MadGraphConeJetFinder */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncModulesDict {
 public:
  G__Sizep2memfuncModulesDict(): p(&G__Sizep2memfuncModulesDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncModulesDict::*p)();
};

size_t G__get_sizep2memfuncModulesDict()
{
  G__Sizep2memfuncModulesDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceModulesDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter))) {
     MadGraphClassFilter *G__Lderived;
     G__Lderived=(MadGraphClassFilter*)0x1000;
     {
       ExRootModule *G__Lpbase=(ExRootModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter),G__get_linked_tagnum(&G__ModulesDictLN_ExRootModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ExRootTask *G__Lpbase=(ExRootTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter),G__get_linked_tagnum(&G__ModulesDictLN_ExRootTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter),G__get_linked_tagnum(&G__ModulesDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter),G__get_linked_tagnum(&G__ModulesDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter),G__get_linked_tagnum(&G__ModulesDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis))) {
     MadGraphAnalysis *G__Lderived;
     G__Lderived=(MadGraphAnalysis*)0x1000;
     {
       ExRootModule *G__Lpbase=(ExRootModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis),G__get_linked_tagnum(&G__ModulesDictLN_ExRootModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ExRootTask *G__Lpbase=(ExRootTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis),G__get_linked_tagnum(&G__ModulesDictLN_ExRootTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis),G__get_linked_tagnum(&G__ModulesDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis),G__get_linked_tagnum(&G__ModulesDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis),G__get_linked_tagnum(&G__ModulesDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder))) {
     MadGraphKtJetFinder *G__Lderived;
     G__Lderived=(MadGraphKtJetFinder*)0x1000;
     {
       ExRootModule *G__Lpbase=(ExRootModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_ExRootModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ExRootTask *G__Lpbase=(ExRootTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_ExRootTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder))) {
     MadGraphConeJetFinder *G__Lderived;
     G__Lderived=(MadGraphConeJetFinder*)0x1000;
     {
       ExRootModule *G__Lpbase=(ExRootModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_ExRootModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ExRootTask *G__Lpbase=(ExRootTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_ExRootTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder),G__get_linked_tagnum(&G__ModulesDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableModulesDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ModulesDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ModulesDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ModulesDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ModulesDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,ParticleHistograms*>",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLParticleHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLParticleHistogramsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MadGraphAnalysis::ParticleHistograms*>",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLParticleHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLParticleHistogramsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MadGraphAnalysis::ParticleHistograms*,less<TString> >",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLParticleHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLParticleHistogramsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,PairHistograms*>",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLPairHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLPairHistogramsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MadGraphAnalysis::PairHistograms*>",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLPairHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLPairHistogramsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MadGraphAnalysis::PairHistograms*,less<TString> >",117,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLPairHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLPairHistogramsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const KtLorentzVector*>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const KtJet::KtLorentzVector*>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KtLorentzVector>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KtJet::KtLorentzVector>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PhysicsTower>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Cluster>",117,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEClustercOallocatorlEClustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ModulesDictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MadGraphClassFilter */
static void G__setup_memvarMadGraphClassFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter));
   { MadGraphClassFilter *p; p=(MadGraphClassFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_ExRootFilter),-1,-1,4,"fFilter=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_MadGraphParticleClassifier),-1,-1,4,"fClassifier=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TIterator),-1,-1,4,"fItParticle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClonesArray),-1,-1,4,"fBranchParticle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TObjArray),-1,-1,4,"fOutputArray=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MadGraphAnalysis */
static void G__setup_memvarMadGraphAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis));
   { MadGraphAnalysis *p; p=(MadGraphAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TString),-1,-1,4,"fOutputFileName=",0,"!");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__ModulesDictLN_TObjArray),-1,-1,4,"fInputArray=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClonesArray),-1,-1,4,"fBranchEvent=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLParticleHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLParticleHistogramsmUgRsPgRsPgR),G__defined_typename("map<TString,ParticleHistograms*>"),-1,4,"fParticleHistogramsMap=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLPairHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLPairHistogramsmUgRsPgRsPgR),G__defined_typename("map<TString,PairHistograms*>"),-1,4,"fPairHistogramsMap=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MadGraphKtJetFinder */
static void G__setup_memvarMadGraphKtJetFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder));
   { MadGraphKtJetFinder *p; p=(MadGraphKtJetFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxParticleEta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinParticlePT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinJetPT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fParameterR=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCollisionType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDistanceScheme=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRecombinationScheme=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR),G__defined_typename("vector<KtJet::KtLorentzVector>"),-1,4,"fTowersList=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR),G__defined_typename("vector<KtJet::KtLorentzVector>"),-1,4,"fJetsList=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TIterator),-1,-1,4,"fItParticle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClonesArray),-1,-1,4,"fBranchParticle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TObjArray),-1,-1,4,"fOutputArray=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MadGraphConeJetFinder */
static void G__setup_memvarMadGraphConeJetFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder));
   { MadGraphConeJetFinder *p; p=(MadGraphConeJetFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinParticlePT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinJetPT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgR),G__defined_typename("vector<PhysicsTower>"),-1,4,"fTowersList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ModulesDictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,4,"fJetsList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_MidPointAlgorithm),-1,-1,4,"fJetAlgo=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TIterator),-1,-1,4,"fItParticle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClonesArray),-1,-1,4,"fBranchParticle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TObjArray),-1,-1,4,"fOutputArray=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ModulesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarModulesDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMadGraphClassFilter(void) {
   /* MadGraphClassFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter));
   G__memfunc_setup("MadGraphClassFilter",1888,G__ModulesDict_445_0_1, 105, G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ModulesDict_445_0_5, 85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MadGraphClassFilter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ModulesDict_445_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphClassFilter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ModulesDict_445_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MadGraphClassFilter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ModulesDict_445_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MadGraphClassFilter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ModulesDict_445_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ModulesDict_445_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphClassFilter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ModulesDict_445_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphClassFilter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ModulesDict_445_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphClassFilter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ModulesDict_445_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphClassFilter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MadGraphClassFilter", 1888, G__ModulesDict_445_0_17, (int) ('i'), G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter), -1, 0, 1, 1, 1, 0, "u 'MadGraphClassFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MadGraphClassFilter", 2014, G__ModulesDict_445_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ModulesDict_445_0_19, (int) ('u'), G__get_linked_tagnum(&G__ModulesDictLN_MadGraphClassFilter), -1, 1, 1, 1, 1, 0, "u 'MadGraphClassFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMadGraphAnalysis(void) {
   /* MadGraphAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis));
   G__memfunc_setup("MadGraphAnalysis",1608,G__ModulesDict_447_0_1, 105, G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BookParticleHistograms",2272,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'MadGraphAnalysis::ParticleHistograms' - 0 - histograms C - - 10 - name "
"C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookPairHistograms",1848,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'MadGraphAnalysis::PairHistograms' - 0 - histograms C - - 10 - name "
"C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleHistograms",2165,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysiscLcLParticleHistograms), -1, 0, 2, 1, 4, 0, 
"C - - 10 - module i - 'Int_t' 0 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPairHistograms",1741,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysiscLcLPairHistograms), -1, 0, 4, 1, 4, 0, 
"C - - 10 - module1 i - 'Int_t' 0 - number1 "
"C - - 10 - module2 i - 'Int_t' 0 - number2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ModulesDict_447_0_9, 85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MadGraphAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ModulesDict_447_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ModulesDict_447_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MadGraphAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ModulesDict_447_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MadGraphAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ModulesDict_447_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ModulesDict_447_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ModulesDict_447_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ModulesDict_447_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ModulesDict_447_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MadGraphAnalysis", 1608, G__ModulesDict_447_0_21, (int) ('i'), G__get_linked_tagnum(&G__ModulesDictLN_MadGraphAnalysis), -1, 0, 1, 1, 1, 0, "u 'MadGraphAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MadGraphAnalysis", 1734, G__ModulesDict_447_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMadGraphKtJetFinder(void) {
   /* MadGraphKtJetFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder));
   G__memfunc_setup("MadGraphKtJetFinder",1854,G__ModulesDict_511_0_1, 105, G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ModulesDict_511_0_5, 85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MadGraphKtJetFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ModulesDict_511_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphKtJetFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ModulesDict_511_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MadGraphKtJetFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ModulesDict_511_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MadGraphKtJetFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ModulesDict_511_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ModulesDict_511_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphKtJetFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ModulesDict_511_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphKtJetFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ModulesDict_511_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphKtJetFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ModulesDict_511_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphKtJetFinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MadGraphKtJetFinder", 1854, G__ModulesDict_511_0_17, (int) ('i'), G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder), -1, 0, 1, 1, 1, 0, "u 'MadGraphKtJetFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MadGraphKtJetFinder", 1980, G__ModulesDict_511_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ModulesDict_511_0_19, (int) ('u'), G__get_linked_tagnum(&G__ModulesDictLN_MadGraphKtJetFinder), -1, 1, 1, 1, 1, 0, "u 'MadGraphKtJetFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMadGraphConeJetFinder(void) {
   /* MadGraphConeJetFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder));
   G__memfunc_setup("MadGraphConeJetFinder",2052,G__ModulesDict_522_0_1, 105, G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ModulesDict_522_0_5, 85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MadGraphConeJetFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ModulesDict_522_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphConeJetFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ModulesDict_522_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MadGraphConeJetFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ModulesDict_522_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MadGraphConeJetFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ModulesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ModulesDict_522_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ModulesDict_522_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphConeJetFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ModulesDict_522_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphConeJetFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ModulesDict_522_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MadGraphConeJetFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ModulesDict_522_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MadGraphConeJetFinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MadGraphConeJetFinder", 2052, G__ModulesDict_522_0_17, (int) ('i'), 
G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder), -1, 0, 1, 1, 1, 0, "u 'MadGraphConeJetFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MadGraphConeJetFinder", 2178, G__ModulesDict_522_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ModulesDict_522_0_19, (int) ('u'), G__get_linked_tagnum(&G__ModulesDictLN_MadGraphConeJetFinder), -1, 1, 1, 1, 1, 0, "u 'MadGraphConeJetFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncModulesDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalModulesDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcModulesDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ModulesDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ModulesDictLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_ExRootTask = { "ExRootTask" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_ExRootModule = { "ExRootModule" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_ExRootFilter = { "ExRootFilter" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_MadGraphParticleClassifier = { "MadGraphParticleClassifier" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_MadGraphClassFilter = { "MadGraphClassFilter" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_MadGraphAnalysis = { "MadGraphAnalysis" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_MadGraphAnalysiscLcLParticleHistograms = { "MadGraphAnalysis::ParticleHistograms" , 115 , -1 };
G__linked_taginfo G__ModulesDictLN_MadGraphAnalysiscLcLPairHistograms = { "MadGraphAnalysis::PairHistograms" , 115 , -1 };
G__linked_taginfo G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLParticleHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLParticleHistogramsmUgRsPgRsPgR = { "map<TString,MadGraphAnalysis::ParticleHistograms*,less<TString>,allocator<pair<const TString,MadGraphAnalysis::ParticleHistograms*> > >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLPairHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLPairHistogramsmUgRsPgRsPgR = { "map<TString,MadGraphAnalysis::PairHistograms*,less<TString>,allocator<pair<const TString,MadGraphAnalysis::PairHistograms*> > >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_vectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgR = { "vector<const KtJet::KtLorentzVector*,allocator<const KtJet::KtLorentzVector*> >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_reverse_iteratorlEvectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const KtJet::KtLorentzVector*,allocator<const KtJet::KtLorentzVector*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR = { "vector<KtJet::KtLorentzVector,allocator<KtJet::KtLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_reverse_iteratorlEvectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KtJet::KtLorentzVector,allocator<KtJet::KtLorentzVector> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_MadGraphKtJetFinder = { "MadGraphKtJetFinder" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_vectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgR = { "vector<PhysicsTower,allocator<PhysicsTower> >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_reverse_iteratorlEvectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PhysicsTower,allocator<PhysicsTower> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_MidPointAlgorithm = { "MidPointAlgorithm" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_MadGraphConeJetFinder = { "MadGraphConeJetFinder" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_vectorlEClustercOallocatorlEClustergRsPgR = { "vector<Cluster,allocator<Cluster> >" , 99 , -1 };
G__linked_taginfo G__ModulesDictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Cluster,allocator<Cluster> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableModulesDict() {
  G__ModulesDictLN_TClass.tagnum = -1 ;
  G__ModulesDictLN_TBuffer.tagnum = -1 ;
  G__ModulesDictLN_TMemberInspector.tagnum = -1 ;
  G__ModulesDictLN_TObject.tagnum = -1 ;
  G__ModulesDictLN_TNamed.tagnum = -1 ;
  G__ModulesDictLN_TString.tagnum = -1 ;
  G__ModulesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ModulesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ModulesDictLN_TObjArray.tagnum = -1 ;
  G__ModulesDictLN_TClonesArray.tagnum = -1 ;
  G__ModulesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ModulesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ModulesDictLN_TIterator.tagnum = -1 ;
  G__ModulesDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ModulesDictLN_TTask.tagnum = -1 ;
  G__ModulesDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__ModulesDictLN_ExRootTask.tagnum = -1 ;
  G__ModulesDictLN_ExRootModule.tagnum = -1 ;
  G__ModulesDictLN_ExRootFilter.tagnum = -1 ;
  G__ModulesDictLN_MadGraphParticleClassifier.tagnum = -1 ;
  G__ModulesDictLN_MadGraphClassFilter.tagnum = -1 ;
  G__ModulesDictLN_MadGraphAnalysis.tagnum = -1 ;
  G__ModulesDictLN_MadGraphAnalysiscLcLParticleHistograms.tagnum = -1 ;
  G__ModulesDictLN_MadGraphAnalysiscLcLPairHistograms.tagnum = -1 ;
  G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLParticleHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLParticleHistogramsmUgRsPgRsPgR.tagnum = -1 ;
  G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLPairHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLPairHistogramsmUgRsPgRsPgR.tagnum = -1 ;
  G__ModulesDictLN_vectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgR.tagnum = -1 ;
  G__ModulesDictLN_reverse_iteratorlEvectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR.tagnum = -1 ;
  G__ModulesDictLN_reverse_iteratorlEvectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ModulesDictLN_MadGraphKtJetFinder.tagnum = -1 ;
  G__ModulesDictLN_vectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgR.tagnum = -1 ;
  G__ModulesDictLN_reverse_iteratorlEvectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ModulesDictLN_MidPointAlgorithm.tagnum = -1 ;
  G__ModulesDictLN_MadGraphConeJetFinder.tagnum = -1 ;
  G__ModulesDictLN_vectorlEClustercOallocatorlEClustergRsPgR.tagnum = -1 ;
  G__ModulesDictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableModulesDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TString);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TIterator);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_TTask);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_ExRootTask);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_ExRootModule);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_ExRootFilter);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_MadGraphParticleClassifier);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ModulesDictLN_MadGraphClassFilter),sizeof(MadGraphClassFilter),-1,324864,(char*)NULL,G__setup_memvarMadGraphClassFilter,G__setup_memfuncMadGraphClassFilter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ModulesDictLN_MadGraphAnalysis),sizeof(MadGraphAnalysis),-1,324864,(char*)NULL,G__setup_memvarMadGraphAnalysis,G__setup_memfuncMadGraphAnalysis);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_MadGraphAnalysiscLcLParticleHistograms);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_MadGraphAnalysiscLcLPairHistograms);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLParticleHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLParticleHistogramsmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_maplETStringcOMadGraphAnalysiscLcLPairHistogramsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMadGraphAnalysiscLcLPairHistogramsmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_vectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_reverse_iteratorlEvectorlEconstsPKtJetcLcLKtLorentzVectormUcOallocatorlEconstsPKtJetcLcLKtLorentzVectormUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_vectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_reverse_iteratorlEvectorlEKtJetcLcLKtLorentzVectorcOallocatorlEKtJetcLcLKtLorentzVectorgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ModulesDictLN_MadGraphKtJetFinder),sizeof(MadGraphKtJetFinder),-1,324864,(char*)NULL,G__setup_memvarMadGraphKtJetFinder,G__setup_memfuncMadGraphKtJetFinder);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_vectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_reverse_iteratorlEvectorlEPhysicsTowercOallocatorlEPhysicsTowergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_MidPointAlgorithm);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ModulesDictLN_MadGraphConeJetFinder),sizeof(MadGraphConeJetFinder),-1,324864,(char*)NULL,G__setup_memvarMadGraphConeJetFinder,G__setup_memfuncMadGraphConeJetFinder);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_vectorlEClustercOallocatorlEClustergRsPgR);
   G__get_linked_tagnum_fwd(&G__ModulesDictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupModulesDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupModulesDict()");
  G__set_cpp_environmentModulesDict();
  G__cpp_setup_tagtableModulesDict();

  G__cpp_setup_inheritanceModulesDict();

  G__cpp_setup_typetableModulesDict();

  G__cpp_setup_memvarModulesDict();

  G__cpp_setup_memfuncModulesDict();
  G__cpp_setup_globalModulesDict();
  G__cpp_setup_funcModulesDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncModulesDict();
  return;
}
class G__cpp_setup_initModulesDict {
  public:
    G__cpp_setup_initModulesDict() { G__add_setup_func("ModulesDict",(G__incsetup)(&G__cpp_setupModulesDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initModulesDict() { G__remove_setup_func("ModulesDict"); }
};
G__cpp_setup_initModulesDict G__cpp_setup_initializerModulesDict;

