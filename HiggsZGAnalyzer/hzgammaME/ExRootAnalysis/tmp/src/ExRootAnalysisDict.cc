#define private public
#define protected public
/** \class ExRootAnalysisLinkDef
 *
 *  Lists classes to be included in cint dicitonary
 *
 *  $Date: 2006/12/19 19:18:46 $
 *  $Revision: 1.5 $
 *
 *  
 *  \author P. Demin - UCL, Louvain-la-Neuve
 *
 */

#include "ExRootAnalysis/ExRootClasses.h"
#include "ExRootAnalysis/ExRootTreeReader.h"
#include "ExRootAnalysis/ExRootTreeWriter.h"
#include "ExRootAnalysis/ExRootTreeBranch.h"
#include "ExRootAnalysis/ExRootResult.h"
#include "ExRootAnalysis/ExRootUtilities.h"
#include "ExRootAnalysis/ExRootClassifier.h"
#include "ExRootAnalysis/ExRootFilter.h"

#include "ExRootAnalysis/ExRootProgressBar.h"
#include "ExRootAnalysis/ExRootConfReader.h"
#include "ExRootAnalysis/ExRootAnalysis.h"
#include "ExRootAnalysis/ExRootFactory.h"
#include "ExRootAnalysis/ExRootModule.h"
#include "ExRootAnalysis/ExRootTask.h"

#ifdef __CINT__

#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;

#pragma link C++ class TSortableObject+;
#pragma link C++ class TRootLHEFEvent+;
#pragma link C++ class TRootLHEFParticle+;
#pragma link C++ class TRootGenEvent+;
#pragma link C++ class TRootGenParticle+;
#pragma link C++ class TRootGenJet+;
#pragma link C++ class TRootEvent+;
#pragma link C++ class TRootMissingET+;
#pragma link C++ class TRootPhoton+;
#pragma link C++ class TRootElectron+;
#pragma link C++ class TRootMuon+;
#pragma link C++ class TRootTau+;
#pragma link C++ class TRootJet+;

#pragma link C++ class ExRootTreeReader+;
#pragma link C++ class ExRootTreeBranch+;
#pragma link C++ class ExRootTreeWriter+;
#pragma link C++ class ExRootResult+;
#pragma link C++ class ExRootClassifier+;
#pragma link C++ class ExRootFilter+;

#pragma link C++ class ExRootProgressBar+;
#pragma link C++ class ExRootConfReader+;
#pragma link C++ class ExRootAnalysis+;
#pragma link C++ class ExRootFactory+;
#pragma link C++ class ExRootModule+;
#pragma link C++ class ExRootTask+;

#pragma link C++ function HistStyle;
#pragma link C++ function FillChain;

#endif

//
// File generated by rootcint at Wed Aug 21 11:56:05 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME tmpdIsrcdIExRootAnalysisDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ExRootAnalysisDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootTreeBranch ExRootTreeBranch;
      #else
      class ExRootTreeBranch  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ExRootTreeBranch::MemoryAllocationExeption MemoryAllocationExeption;
         #else
         class MemoryAllocationExeption  {
            public:
            //friend XX;
         };
         #endif

         int fSize; //
         int fCapacity; //
         ::TClonesArray* fData; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootResult ExRootResult;
      #else
      class ExRootResult  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ExRootResult::PlotSettings PlotSettings;
         #else
         class PlotSettings  {
            public:
            //friend XX;
            int logx; //
            int logy; //
         };
         #endif

         ::TCanvas* fCanvas; //!
         set< ::TObject* > fPool; //!
         map< ::TObject*, ::TObjArray* > fPlots; //!
         map< ::TObject*, ::ExRootResult::PlotSettings > fSettings; //!
         ::TFolder* fFolder; //!
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootClassifier ExRootClassifier;
      #else
      class ExRootClassifier  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ExRootClassifier() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootFilter ExRootFilter;
      #else
      class ExRootFilter  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ExRootFilter::FilterExeption FilterExeption;
         #else
         class FilterExeption  {
            public:
            //friend XX;
         };
         #endif

         :: TSeqCollection* fCollection; //
         ::TIterator* fIter; //
         map< ::ExRootClassifier*, pair< bool, map< int, ::TObjArray*, ::less< int >, allocator< pair< const int, ::TObjArray* >  >  >  >  > fMap; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootProgressBar ExRootProgressBar;
      #else
      class ExRootProgressBar  {
         public:
         //friend XX;
         G__int64 fEntries; //
         int fWidth; //
         G__uint64 fTime; //
         int fHashes; //
         char* fBar; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSortableObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSortableObject(void *p);
   static void deleteArray_TSortableObject(void *p);
   static void destruct_TSortableObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSortableObject*)
   {
      ::TSortableObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSortableObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSortableObject", ::TSortableObject::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 38,
                  typeid(::TSortableObject), DefineBehavior(ptr, ptr),
                  &::TSortableObject::Dictionary, isa_proxy, 4,
                  sizeof(::TSortableObject) );
      instance.SetDelete(&delete_TSortableObject);
      instance.SetDeleteArray(&deleteArray_TSortableObject);
      instance.SetDestructor(&destruct_TSortableObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSortableObject*)
   {
      return GenerateInitInstanceLocal((::TSortableObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSortableObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootLHEFEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootLHEFEvent(void *p = 0);
   static void *newArray_TRootLHEFEvent(Long_t size, void *p);
   static void delete_TRootLHEFEvent(void *p);
   static void deleteArray_TRootLHEFEvent(void *p);
   static void destruct_TRootLHEFEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootLHEFEvent*)
   {
      ::TRootLHEFEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootLHEFEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootLHEFEvent", ::TRootLHEFEvent::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 52,
                  typeid(::TRootLHEFEvent), DefineBehavior(ptr, ptr),
                  &::TRootLHEFEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TRootLHEFEvent) );
      instance.SetNew(&new_TRootLHEFEvent);
      instance.SetNewArray(&newArray_TRootLHEFEvent);
      instance.SetDelete(&delete_TRootLHEFEvent);
      instance.SetDeleteArray(&deleteArray_TRootLHEFEvent);
      instance.SetDestructor(&destruct_TRootLHEFEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootLHEFEvent*)
   {
      return GenerateInitInstanceLocal((::TRootLHEFEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootLHEFEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootLHEFParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootLHEFParticle(void *p = 0);
   static void *newArray_TRootLHEFParticle(Long_t size, void *p);
   static void delete_TRootLHEFParticle(void *p);
   static void deleteArray_TRootLHEFParticle(void *p);
   static void destruct_TRootLHEFParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootLHEFParticle*)
   {
      ::TRootLHEFParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootLHEFParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootLHEFParticle", ::TRootLHEFParticle::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 71,
                  typeid(::TRootLHEFParticle), DefineBehavior(ptr, ptr),
                  &::TRootLHEFParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TRootLHEFParticle) );
      instance.SetNew(&new_TRootLHEFParticle);
      instance.SetNewArray(&newArray_TRootLHEFParticle);
      instance.SetDelete(&delete_TRootLHEFParticle);
      instance.SetDeleteArray(&deleteArray_TRootLHEFParticle);
      instance.SetDestructor(&destruct_TRootLHEFParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootLHEFParticle*)
   {
      return GenerateInitInstanceLocal((::TRootLHEFParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootLHEFParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootGenEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootGenEvent(void *p = 0);
   static void *newArray_TRootGenEvent(Long_t size, void *p);
   static void delete_TRootGenEvent(void *p);
   static void deleteArray_TRootGenEvent(void *p);
   static void destruct_TRootGenEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootGenEvent*)
   {
      ::TRootGenEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootGenEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootGenEvent", ::TRootGenEvent::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 110,
                  typeid(::TRootGenEvent), DefineBehavior(ptr, ptr),
                  &::TRootGenEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TRootGenEvent) );
      instance.SetNew(&new_TRootGenEvent);
      instance.SetNewArray(&newArray_TRootGenEvent);
      instance.SetDelete(&delete_TRootGenEvent);
      instance.SetDeleteArray(&deleteArray_TRootGenEvent);
      instance.SetDestructor(&destruct_TRootGenEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootGenEvent*)
   {
      return GenerateInitInstanceLocal((::TRootGenEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootGenEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootGenParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootGenParticle(void *p = 0);
   static void *newArray_TRootGenParticle(Long_t size, void *p);
   static void delete_TRootGenParticle(void *p);
   static void deleteArray_TRootGenParticle(void *p);
   static void destruct_TRootGenParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootGenParticle*)
   {
      ::TRootGenParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootGenParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootGenParticle", ::TRootGenParticle::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 121,
                  typeid(::TRootGenParticle), DefineBehavior(ptr, ptr),
                  &::TRootGenParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TRootGenParticle) );
      instance.SetNew(&new_TRootGenParticle);
      instance.SetNewArray(&newArray_TRootGenParticle);
      instance.SetDelete(&delete_TRootGenParticle);
      instance.SetDeleteArray(&deleteArray_TRootGenParticle);
      instance.SetDestructor(&destruct_TRootGenParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootGenParticle*)
   {
      return GenerateInitInstanceLocal((::TRootGenParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootGenParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootGenJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootGenJet(void *p = 0);
   static void *newArray_TRootGenJet(Long_t size, void *p);
   static void delete_TRootGenJet(void *p);
   static void deleteArray_TRootGenJet(void *p);
   static void destruct_TRootGenJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootGenJet*)
   {
      ::TRootGenJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootGenJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootGenJet", ::TRootGenJet::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 155,
                  typeid(::TRootGenJet), DefineBehavior(ptr, ptr),
                  &::TRootGenJet::Dictionary, isa_proxy, 4,
                  sizeof(::TRootGenJet) );
      instance.SetNew(&new_TRootGenJet);
      instance.SetNewArray(&newArray_TRootGenJet);
      instance.SetDelete(&delete_TRootGenJet);
      instance.SetDeleteArray(&deleteArray_TRootGenJet);
      instance.SetDestructor(&destruct_TRootGenJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootGenJet*)
   {
      return GenerateInitInstanceLocal((::TRootGenJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootGenJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootEvent(void *p = 0);
   static void *newArray_TRootEvent(Long_t size, void *p);
   static void delete_TRootEvent(void *p);
   static void deleteArray_TRootEvent(void *p);
   static void destruct_TRootEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootEvent*)
   {
      ::TRootEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootEvent", ::TRootEvent::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 180,
                  typeid(::TRootEvent), DefineBehavior(ptr, ptr),
                  &::TRootEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TRootEvent) );
      instance.SetNew(&new_TRootEvent);
      instance.SetNewArray(&newArray_TRootEvent);
      instance.SetDelete(&delete_TRootEvent);
      instance.SetDeleteArray(&deleteArray_TRootEvent);
      instance.SetDestructor(&destruct_TRootEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootEvent*)
   {
      return GenerateInitInstanceLocal((::TRootEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootMissingET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootMissingET(void *p = 0);
   static void *newArray_TRootMissingET(Long_t size, void *p);
   static void delete_TRootMissingET(void *p);
   static void deleteArray_TRootMissingET(void *p);
   static void destruct_TRootMissingET(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootMissingET*)
   {
      ::TRootMissingET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootMissingET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootMissingET", ::TRootMissingET::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 192,
                  typeid(::TRootMissingET), DefineBehavior(ptr, ptr),
                  &::TRootMissingET::Dictionary, isa_proxy, 4,
                  sizeof(::TRootMissingET) );
      instance.SetNew(&new_TRootMissingET);
      instance.SetNewArray(&newArray_TRootMissingET);
      instance.SetDelete(&delete_TRootMissingET);
      instance.SetDeleteArray(&deleteArray_TRootMissingET);
      instance.SetDestructor(&destruct_TRootMissingET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootMissingET*)
   {
      return GenerateInitInstanceLocal((::TRootMissingET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootMissingET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootPhoton(void *p = 0);
   static void *newArray_TRootPhoton(Long_t size, void *p);
   static void delete_TRootPhoton(void *p);
   static void deleteArray_TRootPhoton(void *p);
   static void destruct_TRootPhoton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootPhoton*)
   {
      ::TRootPhoton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootPhoton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootPhoton", ::TRootPhoton::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 203,
                  typeid(::TRootPhoton), DefineBehavior(ptr, ptr),
                  &::TRootPhoton::Dictionary, isa_proxy, 4,
                  sizeof(::TRootPhoton) );
      instance.SetNew(&new_TRootPhoton);
      instance.SetNewArray(&newArray_TRootPhoton);
      instance.SetDelete(&delete_TRootPhoton);
      instance.SetDeleteArray(&deleteArray_TRootPhoton);
      instance.SetDestructor(&destruct_TRootPhoton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootPhoton*)
   {
      return GenerateInitInstanceLocal((::TRootPhoton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootPhoton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootElectron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootElectron(void *p = 0);
   static void *newArray_TRootElectron(Long_t size, void *p);
   static void delete_TRootElectron(void *p);
   static void deleteArray_TRootElectron(void *p);
   static void destruct_TRootElectron(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootElectron*)
   {
      ::TRootElectron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootElectron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootElectron", ::TRootElectron::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 222,
                  typeid(::TRootElectron), DefineBehavior(ptr, ptr),
                  &::TRootElectron::Dictionary, isa_proxy, 4,
                  sizeof(::TRootElectron) );
      instance.SetNew(&new_TRootElectron);
      instance.SetNewArray(&newArray_TRootElectron);
      instance.SetDelete(&delete_TRootElectron);
      instance.SetDeleteArray(&deleteArray_TRootElectron);
      instance.SetDestructor(&destruct_TRootElectron);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootElectron*)
   {
      return GenerateInitInstanceLocal((::TRootElectron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootElectron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootMuon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootMuon(void *p = 0);
   static void *newArray_TRootMuon(Long_t size, void *p);
   static void delete_TRootMuon(void *p);
   static void deleteArray_TRootMuon(void *p);
   static void destruct_TRootMuon(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootMuon*)
   {
      ::TRootMuon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootMuon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootMuon", ::TRootMuon::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 245,
                  typeid(::TRootMuon), DefineBehavior(ptr, ptr),
                  &::TRootMuon::Dictionary, isa_proxy, 4,
                  sizeof(::TRootMuon) );
      instance.SetNew(&new_TRootMuon);
      instance.SetNewArray(&newArray_TRootMuon);
      instance.SetDelete(&delete_TRootMuon);
      instance.SetDeleteArray(&deleteArray_TRootMuon);
      instance.SetDestructor(&destruct_TRootMuon);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootMuon*)
   {
      return GenerateInitInstanceLocal((::TRootMuon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootMuon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootTau_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootTau(void *p = 0);
   static void *newArray_TRootTau(Long_t size, void *p);
   static void delete_TRootTau(void *p);
   static void deleteArray_TRootTau(void *p);
   static void destruct_TRootTau(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootTau*)
   {
      ::TRootTau *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootTau >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootTau", ::TRootTau::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 273,
                  typeid(::TRootTau), DefineBehavior(ptr, ptr),
                  &::TRootTau::Dictionary, isa_proxy, 4,
                  sizeof(::TRootTau) );
      instance.SetNew(&new_TRootTau);
      instance.SetNewArray(&newArray_TRootTau);
      instance.SetDelete(&delete_TRootTau);
      instance.SetDeleteArray(&deleteArray_TRootTau);
      instance.SetDestructor(&destruct_TRootTau);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootTau*)
   {
      return GenerateInitInstanceLocal((::TRootTau*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootTau*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRootJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRootJet(void *p = 0);
   static void *newArray_TRootJet(Long_t size, void *p);
   static void delete_TRootJet(void *p);
   static void deleteArray_TRootJet(void *p);
   static void destruct_TRootJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRootJet*)
   {
      ::TRootJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRootJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRootJet", ::TRootJet::Class_Version(), "./ExRootAnalysis/ExRootClasses.h", 296,
                  typeid(::TRootJet), DefineBehavior(ptr, ptr),
                  &::TRootJet::Dictionary, isa_proxy, 4,
                  sizeof(::TRootJet) );
      instance.SetNew(&new_TRootJet);
      instance.SetNewArray(&newArray_TRootJet);
      instance.SetDelete(&delete_TRootJet);
      instance.SetDeleteArray(&deleteArray_TRootJet);
      instance.SetDestructor(&destruct_TRootJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRootJet*)
   {
      return GenerateInitInstanceLocal((::TRootJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRootJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootTreeReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootTreeReader(void *p = 0);
   static void *newArray_ExRootTreeReader(Long_t size, void *p);
   static void delete_ExRootTreeReader(void *p);
   static void deleteArray_ExRootTreeReader(void *p);
   static void destruct_ExRootTreeReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTreeReader*)
   {
      ::ExRootTreeReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootTreeReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTreeReader", ::ExRootTreeReader::Class_Version(), "./ExRootAnalysis/ExRootTreeReader.h", 27,
                  typeid(::ExRootTreeReader), DefineBehavior(ptr, ptr),
                  &::ExRootTreeReader::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTreeReader) );
      instance.SetNew(&new_ExRootTreeReader);
      instance.SetNewArray(&newArray_ExRootTreeReader);
      instance.SetDelete(&delete_ExRootTreeReader);
      instance.SetDeleteArray(&deleteArray_ExRootTreeReader);
      instance.SetDestructor(&destruct_ExRootTreeReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTreeReader*)
   {
      return GenerateInitInstanceLocal((::ExRootTreeReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootTreeBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootTreeBranch_Dictionary();
   static void delete_ExRootTreeBranch(void *p);
   static void deleteArray_ExRootTreeBranch(void *p);
   static void destruct_ExRootTreeBranch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTreeBranch*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootTreeBranch) == sizeof(::ROOT::Shadow::ExRootTreeBranch));
      ::ExRootTreeBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootTreeBranch),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTreeBranch", "./ExRootAnalysis/ExRootTreeBranch.h", 23,
                  typeid(::ExRootTreeBranch), DefineBehavior(ptr, ptr),
                  &ExRootTreeBranch_ShowMembers, &ExRootTreeBranch_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTreeBranch) );
      instance.SetDelete(&delete_ExRootTreeBranch);
      instance.SetDeleteArray(&deleteArray_ExRootTreeBranch);
      instance.SetDestructor(&destruct_ExRootTreeBranch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTreeBranch*)
   {
      return GenerateInitInstanceLocal((::ExRootTreeBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTreeBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootTreeBranch_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeBranch*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootTreeWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootTreeWriter(void *p = 0);
   static void *newArray_ExRootTreeWriter(Long_t size, void *p);
   static void delete_ExRootTreeWriter(void *p);
   static void deleteArray_ExRootTreeWriter(void *p);
   static void destruct_ExRootTreeWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTreeWriter*)
   {
      ::ExRootTreeWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootTreeWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTreeWriter", ::ExRootTreeWriter::Class_Version(), "./ExRootAnalysis/ExRootTreeWriter.h", 26,
                  typeid(::ExRootTreeWriter), DefineBehavior(ptr, ptr),
                  &::ExRootTreeWriter::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTreeWriter) );
      instance.SetNew(&new_ExRootTreeWriter);
      instance.SetNewArray(&newArray_ExRootTreeWriter);
      instance.SetDelete(&delete_ExRootTreeWriter);
      instance.SetDeleteArray(&deleteArray_ExRootTreeWriter);
      instance.SetDestructor(&destruct_ExRootTreeWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTreeWriter*)
   {
      return GenerateInitInstanceLocal((::ExRootTreeWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootResult_Dictionary();
   static void *new_ExRootResult(void *p = 0);
   static void *newArray_ExRootResult(Long_t size, void *p);
   static void delete_ExRootResult(void *p);
   static void deleteArray_ExRootResult(void *p);
   static void destruct_ExRootResult(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootResult*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootResult) == sizeof(::ROOT::Shadow::ExRootResult));
      ::ExRootResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootResult),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootResult", "./ExRootAnalysis/ExRootResult.h", 22,
                  typeid(::ExRootResult), DefineBehavior(ptr, ptr),
                  &ExRootResult_ShowMembers, &ExRootResult_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootResult) );
      instance.SetNew(&new_ExRootResult);
      instance.SetNewArray(&newArray_ExRootResult);
      instance.SetDelete(&delete_ExRootResult);
      instance.SetDeleteArray(&deleteArray_ExRootResult);
      instance.SetDestructor(&destruct_ExRootResult);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootResult*)
   {
      return GenerateInitInstanceLocal((::ExRootResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootResult_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootResult*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootClassifier_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootClassifier_Dictionary();
   static void delete_ExRootClassifier(void *p);
   static void deleteArray_ExRootClassifier(void *p);
   static void destruct_ExRootClassifier(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootClassifier*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootClassifier) == sizeof(::ROOT::Shadow::ExRootClassifier));
      ::ExRootClassifier *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootClassifier),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootClassifier", "./ExRootAnalysis/ExRootClassifier.h", 9,
                  typeid(::ExRootClassifier), DefineBehavior(ptr, ptr),
                  &ExRootClassifier_ShowMembers, &ExRootClassifier_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootClassifier) );
      instance.SetDelete(&delete_ExRootClassifier);
      instance.SetDeleteArray(&deleteArray_ExRootClassifier);
      instance.SetDestructor(&destruct_ExRootClassifier);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootClassifier*)
   {
      return GenerateInitInstanceLocal((::ExRootClassifier*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootClassifier*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootClassifier_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootClassifier*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootFilter_Dictionary();
   static void delete_ExRootFilter(void *p);
   static void deleteArray_ExRootFilter(void *p);
   static void destruct_ExRootFilter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootFilter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootFilter) == sizeof(::ROOT::Shadow::ExRootFilter));
      ::ExRootFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootFilter),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootFilter", "./ExRootAnalysis/ExRootFilter.h", 14,
                  typeid(::ExRootFilter), DefineBehavior(ptr, ptr),
                  &ExRootFilter_ShowMembers, &ExRootFilter_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootFilter) );
      instance.SetDelete(&delete_ExRootFilter);
      instance.SetDeleteArray(&deleteArray_ExRootFilter);
      instance.SetDestructor(&destruct_ExRootFilter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootFilter*)
   {
      return GenerateInitInstanceLocal((::ExRootFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootFilter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootFilter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootProgressBar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootProgressBar_Dictionary();
   static void delete_ExRootProgressBar(void *p);
   static void deleteArray_ExRootProgressBar(void *p);
   static void destruct_ExRootProgressBar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootProgressBar*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootProgressBar) == sizeof(::ROOT::Shadow::ExRootProgressBar));
      ::ExRootProgressBar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootProgressBar),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootProgressBar", "./ExRootAnalysis/ExRootProgressBar.h", 7,
                  typeid(::ExRootProgressBar), DefineBehavior(ptr, ptr),
                  &ExRootProgressBar_ShowMembers, &ExRootProgressBar_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootProgressBar) );
      instance.SetDelete(&delete_ExRootProgressBar);
      instance.SetDeleteArray(&deleteArray_ExRootProgressBar);
      instance.SetDestructor(&destruct_ExRootProgressBar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootProgressBar*)
   {
      return GenerateInitInstanceLocal((::ExRootProgressBar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootProgressBar*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootProgressBar_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootProgressBar*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootConfReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootConfReader(void *p = 0);
   static void *newArray_ExRootConfReader(Long_t size, void *p);
   static void delete_ExRootConfReader(void *p);
   static void deleteArray_ExRootConfReader(void *p);
   static void destruct_ExRootConfReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootConfReader*)
   {
      ::ExRootConfReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootConfReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootConfReader", ::ExRootConfReader::Class_Version(), "./ExRootAnalysis/ExRootConfReader.h", 49,
                  typeid(::ExRootConfReader), DefineBehavior(ptr, ptr),
                  &::ExRootConfReader::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootConfReader) );
      instance.SetNew(&new_ExRootConfReader);
      instance.SetNewArray(&newArray_ExRootConfReader);
      instance.SetDelete(&delete_ExRootConfReader);
      instance.SetDeleteArray(&deleteArray_ExRootConfReader);
      instance.SetDestructor(&destruct_ExRootConfReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootConfReader*)
   {
      return GenerateInitInstanceLocal((::ExRootConfReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootTask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ExRootTask(void *p);
   static void deleteArray_ExRootTask(void *p);
   static void destruct_ExRootTask(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTask*)
   {
      ::ExRootTask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootTask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTask", ::ExRootTask::Class_Version(), "./ExRootAnalysis/ExRootTask.h", 24,
                  typeid(::ExRootTask), DefineBehavior(ptr, ptr),
                  &::ExRootTask::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTask) );
      instance.SetDelete(&delete_ExRootTask);
      instance.SetDeleteArray(&deleteArray_ExRootTask);
      instance.SetDestructor(&destruct_ExRootTask);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTask*)
   {
      return GenerateInitInstanceLocal((::ExRootTask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootFactory(void *p = 0);
   static void *newArray_ExRootFactory(Long_t size, void *p);
   static void delete_ExRootFactory(void *p);
   static void deleteArray_ExRootFactory(void *p);
   static void destruct_ExRootFactory(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootFactory*)
   {
      ::ExRootFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootFactory", ::ExRootFactory::Class_Version(), "./ExRootAnalysis/ExRootFactory.h", 28,
                  typeid(::ExRootFactory), DefineBehavior(ptr, ptr),
                  &::ExRootFactory::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootFactory) );
      instance.SetNew(&new_ExRootFactory);
      instance.SetNewArray(&newArray_ExRootFactory);
      instance.SetDelete(&delete_ExRootFactory);
      instance.SetDeleteArray(&deleteArray_ExRootFactory);
      instance.SetDestructor(&destruct_ExRootFactory);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootFactory*)
   {
      return GenerateInitInstanceLocal((::ExRootFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootAnalysis(void *p = 0);
   static void *newArray_ExRootAnalysis(Long_t size, void *p);
   static void delete_ExRootAnalysis(void *p);
   static void deleteArray_ExRootAnalysis(void *p);
   static void destruct_ExRootAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootAnalysis*)
   {
      ::ExRootAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootAnalysis", ::ExRootAnalysis::Class_Version(), "./ExRootAnalysis/ExRootAnalysis.h", 30,
                  typeid(::ExRootAnalysis), DefineBehavior(ptr, ptr),
                  &::ExRootAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootAnalysis) );
      instance.SetNew(&new_ExRootAnalysis);
      instance.SetNewArray(&newArray_ExRootAnalysis);
      instance.SetDelete(&delete_ExRootAnalysis);
      instance.SetDeleteArray(&deleteArray_ExRootAnalysis);
      instance.SetDestructor(&destruct_ExRootAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootAnalysis*)
   {
      return GenerateInitInstanceLocal((::ExRootAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ExRootModule(void *p);
   static void deleteArray_ExRootModule(void *p);
   static void destruct_ExRootModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootModule*)
   {
      ::ExRootModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootModule", ::ExRootModule::Class_Version(), "./ExRootAnalysis/ExRootModule.h", 31,
                  typeid(::ExRootModule), DefineBehavior(ptr, ptr),
                  &::ExRootModule::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootModule) );
      instance.SetDelete(&delete_ExRootModule);
      instance.SetDeleteArray(&deleteArray_ExRootModule);
      instance.SetDestructor(&destruct_ExRootModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootModule*)
   {
      return GenerateInitInstanceLocal((::ExRootModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSortableObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSortableObject::Class_Name()
{
   return "TSortableObject";
}

//______________________________________________________________________________
const char *TSortableObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSortableObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSortableObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSortableObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSortableObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSortableObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSortableObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSortableObject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootLHEFEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootLHEFEvent::Class_Name()
{
   return "TRootLHEFEvent";
}

//______________________________________________________________________________
const char *TRootLHEFEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootLHEFEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootLHEFEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootLHEFEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootLHEFParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootLHEFParticle::Class_Name()
{
   return "TRootLHEFParticle";
}

//______________________________________________________________________________
const char *TRootLHEFParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootLHEFParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootLHEFParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootLHEFParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootLHEFParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootGenEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootGenEvent::Class_Name()
{
   return "TRootGenEvent";
}

//______________________________________________________________________________
const char *TRootGenEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootGenEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootGenEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootGenEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootGenEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootGenEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootGenEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootGenEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootGenParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootGenParticle::Class_Name()
{
   return "TRootGenParticle";
}

//______________________________________________________________________________
const char *TRootGenParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootGenParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootGenParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootGenParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootGenParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootGenParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootGenParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootGenParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootGenJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootGenJet::Class_Name()
{
   return "TRootGenJet";
}

//______________________________________________________________________________
const char *TRootGenJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootGenJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootGenJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootGenJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootGenJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootGenJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootGenJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootGenJet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootEvent::Class_Name()
{
   return "TRootEvent";
}

//______________________________________________________________________________
const char *TRootEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootMissingET::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootMissingET::Class_Name()
{
   return "TRootMissingET";
}

//______________________________________________________________________________
const char *TRootMissingET::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootMissingET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootMissingET::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootMissingET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootMissingET::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootMissingET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootMissingET::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootMissingET*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootPhoton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootPhoton::Class_Name()
{
   return "TRootPhoton";
}

//______________________________________________________________________________
const char *TRootPhoton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootPhoton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootPhoton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootPhoton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootPhoton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootPhoton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootPhoton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootPhoton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootElectron::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootElectron::Class_Name()
{
   return "TRootElectron";
}

//______________________________________________________________________________
const char *TRootElectron::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootElectron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootElectron::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootElectron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootElectron::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootElectron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootElectron::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootElectron*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootMuon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootMuon::Class_Name()
{
   return "TRootMuon";
}

//______________________________________________________________________________
const char *TRootMuon::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootMuon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootMuon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootMuon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootMuon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootMuon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootMuon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootMuon*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootTau::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootTau::Class_Name()
{
   return "TRootTau";
}

//______________________________________________________________________________
const char *TRootTau::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootTau*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootTau::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootTau*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootTau::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootTau*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootTau::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootTau*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootJet::Class_Name()
{
   return "TRootJet";
}

//______________________________________________________________________________
const char *TRootJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRootJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRootJet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootTreeReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootTreeReader::Class_Name()
{
   return "ExRootTreeReader";
}

//______________________________________________________________________________
const char *ExRootTreeReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootTreeReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootTreeReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootTreeReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootTreeWriter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootTreeWriter::Class_Name()
{
   return "ExRootTreeWriter";
}

//______________________________________________________________________________
const char *ExRootTreeWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootTreeWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootTreeWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootTreeWriter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootConfReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootConfReader::Class_Name()
{
   return "ExRootConfReader";
}

//______________________________________________________________________________
const char *ExRootConfReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootConfReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootConfReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootConfReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootTask::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootTask::Class_Name()
{
   return "ExRootTask";
}

//______________________________________________________________________________
const char *ExRootTask::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootTask::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootTask::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootTask::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootFactory::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootFactory::Class_Name()
{
   return "ExRootFactory";
}

//______________________________________________________________________________
const char *ExRootFactory::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootFactory::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootFactory::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootFactory::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootFactory*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootAnalysis::Class_Name()
{
   return "ExRootAnalysis";
}

//______________________________________________________________________________
const char *ExRootAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootModule::Class_Name()
{
   return "ExRootModule";
}

//______________________________________________________________________________
const char *ExRootModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootModule*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSortableObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSortableObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSortableObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSortableObject::Class(),this);
   }
}

//______________________________________________________________________________
void TSortableObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSortableObject.
      TClass *R__cl = ::TSortableObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSortableObject(void *p) {
      delete ((::TSortableObject*)p);
   }
   static void deleteArray_TSortableObject(void *p) {
      delete [] ((::TSortableObject*)p);
   }
   static void destruct_TSortableObject(void *p) {
      typedef ::TSortableObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSortableObject

//______________________________________________________________________________
void TRootLHEFEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootLHEFEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootLHEFEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootLHEFEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TRootLHEFEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootLHEFEvent.
      TClass *R__cl = ::TRootLHEFEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", &Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nparticles", &Nparticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProcessID", &ProcessID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Weight", &Weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ScalePDF", &ScalePDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CouplingQED", &CouplingQED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CouplingQCD", &CouplingQCD);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootLHEFEvent(void *p) {
      return  p ? new(p) ::TRootLHEFEvent : new ::TRootLHEFEvent;
   }
   static void *newArray_TRootLHEFEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TRootLHEFEvent[nElements] : new ::TRootLHEFEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootLHEFEvent(void *p) {
      delete ((::TRootLHEFEvent*)p);
   }
   static void deleteArray_TRootLHEFEvent(void *p) {
      delete [] ((::TRootLHEFEvent*)p);
   }
   static void destruct_TRootLHEFEvent(void *p) {
      typedef ::TRootLHEFEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootLHEFEvent

//______________________________________________________________________________
void TRootLHEFParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootLHEFParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootLHEFParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootLHEFParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TRootLHEFParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootLHEFParticle.
      TClass *R__cl = ::TRootLHEFParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", &PID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mother1", &Mother1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mother2", &Mother2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ColorLine1", &ColorLine1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ColorLine2", &ColorLine2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Px", &Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Py", &Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pz", &Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "M", &M);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rapidity", &Rapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LifeTime", &LifeTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Spin", &Spin);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootLHEFParticle(void *p) {
      return  p ? new(p) ::TRootLHEFParticle : new ::TRootLHEFParticle;
   }
   static void *newArray_TRootLHEFParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TRootLHEFParticle[nElements] : new ::TRootLHEFParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootLHEFParticle(void *p) {
      delete ((::TRootLHEFParticle*)p);
   }
   static void deleteArray_TRootLHEFParticle(void *p) {
      delete [] ((::TRootLHEFParticle*)p);
   }
   static void destruct_TRootLHEFParticle(void *p) {
      typedef ::TRootLHEFParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootLHEFParticle

//______________________________________________________________________________
void TRootGenEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootGenEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootGenEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootGenEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TRootGenEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootGenEvent.
      TClass *R__cl = ::TRootGenEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", &Number);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootGenEvent(void *p) {
      return  p ? new(p) ::TRootGenEvent : new ::TRootGenEvent;
   }
   static void *newArray_TRootGenEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TRootGenEvent[nElements] : new ::TRootGenEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootGenEvent(void *p) {
      delete ((::TRootGenEvent*)p);
   }
   static void deleteArray_TRootGenEvent(void *p) {
      delete [] ((::TRootGenEvent*)p);
   }
   static void destruct_TRootGenEvent(void *p) {
      typedef ::TRootGenEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootGenEvent

//______________________________________________________________________________
void TRootGenParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootGenParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootGenParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootGenParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TRootGenParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootGenParticle.
      TClass *R__cl = ::TRootGenParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", &PID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "M1", &M1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "M2", &M2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D1", &D1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D2", &D2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Px", &Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Py", &Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pz", &Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rapidity", &Rapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T", &T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X", &X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y", &Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z", &Z);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootGenParticle(void *p) {
      return  p ? new(p) ::TRootGenParticle : new ::TRootGenParticle;
   }
   static void *newArray_TRootGenParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TRootGenParticle[nElements] : new ::TRootGenParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootGenParticle(void *p) {
      delete ((::TRootGenParticle*)p);
   }
   static void deleteArray_TRootGenParticle(void *p) {
      delete [] ((::TRootGenParticle*)p);
   }
   static void destruct_TRootGenParticle(void *p) {
      typedef ::TRootGenParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootGenParticle

//______________________________________________________________________________
void TRootGenJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootGenJet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootGenJet::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootGenJet::Class(),this);
   }
}

//______________________________________________________________________________
void TRootGenJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootGenJet.
      TClass *R__cl = ::TRootGenJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Px", &Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Py", &Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pz", &Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rapidity", &Rapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass", &Mass);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootGenJet(void *p) {
      return  p ? new(p) ::TRootGenJet : new ::TRootGenJet;
   }
   static void *newArray_TRootGenJet(Long_t nElements, void *p) {
      return p ? new(p) ::TRootGenJet[nElements] : new ::TRootGenJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootGenJet(void *p) {
      delete ((::TRootGenJet*)p);
   }
   static void deleteArray_TRootGenJet(void *p) {
      delete [] ((::TRootGenJet*)p);
   }
   static void destruct_TRootGenJet(void *p) {
      typedef ::TRootGenJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootGenJet

//______________________________________________________________________________
void TRootEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TRootEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootEvent.
      TClass *R__cl = ::TRootEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", &Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trigger", &Trigger);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootEvent(void *p) {
      return  p ? new(p) ::TRootEvent : new ::TRootEvent;
   }
   static void *newArray_TRootEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TRootEvent[nElements] : new ::TRootEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootEvent(void *p) {
      delete ((::TRootEvent*)p);
   }
   static void deleteArray_TRootEvent(void *p) {
      delete [] ((::TRootEvent*)p);
   }
   static void destruct_TRootEvent(void *p) {
      typedef ::TRootEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootEvent

//______________________________________________________________________________
void TRootMissingET::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootMissingET.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootMissingET::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootMissingET::Class(),this);
   }
}

//______________________________________________________________________________
void TRootMissingET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootMissingET.
      TClass *R__cl = ::TRootMissingET::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET", &MET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootMissingET(void *p) {
      return  p ? new(p) ::TRootMissingET : new ::TRootMissingET;
   }
   static void *newArray_TRootMissingET(Long_t nElements, void *p) {
      return p ? new(p) ::TRootMissingET[nElements] : new ::TRootMissingET[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootMissingET(void *p) {
      delete ((::TRootMissingET*)p);
   }
   static void deleteArray_TRootMissingET(void *p) {
      delete [] ((::TRootMissingET*)p);
   }
   static void destruct_TRootMissingET(void *p) {
      typedef ::TRootMissingET current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootMissingET

//______________________________________________________________________________
void TRootPhoton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootPhoton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootPhoton::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootPhoton::Class(),this);
   }
}

//______________________________________________________________________________
void TRootPhoton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootPhoton.
      TClass *R__cl = ::TRootPhoton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EhadOverEem", &EhadOverEem);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootPhoton(void *p) {
      return  p ? new(p) ::TRootPhoton : new ::TRootPhoton;
   }
   static void *newArray_TRootPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::TRootPhoton[nElements] : new ::TRootPhoton[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootPhoton(void *p) {
      delete ((::TRootPhoton*)p);
   }
   static void deleteArray_TRootPhoton(void *p) {
      delete [] ((::TRootPhoton*)p);
   }
   static void destruct_TRootPhoton(void *p) {
      typedef ::TRootPhoton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootPhoton

//______________________________________________________________________________
void TRootElectron::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootElectron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootElectron::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootElectron::Class(),this);
   }
}

//______________________________________________________________________________
void TRootElectron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootElectron.
      TClass *R__cl = ::TRootElectron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ntrk", &Ntrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EhadOverEem", &EhadOverEem);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootElectron(void *p) {
      return  p ? new(p) ::TRootElectron : new ::TRootElectron;
   }
   static void *newArray_TRootElectron(Long_t nElements, void *p) {
      return p ? new(p) ::TRootElectron[nElements] : new ::TRootElectron[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootElectron(void *p) {
      delete ((::TRootElectron*)p);
   }
   static void deleteArray_TRootElectron(void *p) {
      delete [] ((::TRootElectron*)p);
   }
   static void destruct_TRootElectron(void *p) {
      typedef ::TRootElectron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootElectron

//______________________________________________________________________________
void TRootMuon::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootMuon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootMuon::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootMuon::Class(),this);
   }
}

//______________________________________________________________________________
void TRootMuon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootMuon.
      TClass *R__cl = ::TRootMuon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ntrk", &Ntrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PTiso", &PTiso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ETiso", &ETiso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetIndex", &JetIndex);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootMuon(void *p) {
      return  p ? new(p) ::TRootMuon : new ::TRootMuon;
   }
   static void *newArray_TRootMuon(Long_t nElements, void *p) {
      return p ? new(p) ::TRootMuon[nElements] : new ::TRootMuon[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootMuon(void *p) {
      delete ((::TRootMuon*)p);
   }
   static void deleteArray_TRootMuon(void *p) {
      delete [] ((::TRootMuon*)p);
   }
   static void destruct_TRootMuon(void *p) {
      typedef ::TRootMuon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootMuon

//______________________________________________________________________________
void TRootTau::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootTau.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootTau::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootTau::Class(),this);
   }
}

//______________________________________________________________________________
void TRootTau::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootTau.
      TClass *R__cl = ::TRootTau::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ntrk", &Ntrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EhadOverEem", &EhadOverEem);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootTau(void *p) {
      return  p ? new(p) ::TRootTau : new ::TRootTau;
   }
   static void *newArray_TRootTau(Long_t nElements, void *p) {
      return p ? new(p) ::TRootTau[nElements] : new ::TRootTau[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootTau(void *p) {
      delete ((::TRootTau*)p);
   }
   static void deleteArray_TRootTau(void *p) {
      delete [] ((::TRootTau*)p);
   }
   static void destruct_TRootTau(void *p) {
      typedef ::TRootTau current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootTau

//______________________________________________________________________________
void TRootJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootJet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRootJet::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRootJet::Class(),this);
   }
}

//______________________________________________________________________________
void TRootJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRootJet.
      TClass *R__cl = ::TRootJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT", &PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass", &Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ntrk", &Ntrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BTag", &BTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EhadOverEem", &EhadOverEem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Index", &Index);
      TSortableObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRootJet(void *p) {
      return  p ? new(p) ::TRootJet : new ::TRootJet;
   }
   static void *newArray_TRootJet(Long_t nElements, void *p) {
      return p ? new(p) ::TRootJet[nElements] : new ::TRootJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRootJet(void *p) {
      delete ((::TRootJet*)p);
   }
   static void deleteArray_TRootJet(void *p) {
      delete [] ((::TRootJet*)p);
   }
   static void destruct_TRootJet(void *p) {
      typedef ::TRootJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootJet

//______________________________________________________________________________
void ExRootTreeReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootTreeReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootTreeReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootTreeReader::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootTreeReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootTreeReader.
      TClass *R__cl = ::ExRootTreeReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentTree", &fCurrentTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFolder", &fFolder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchMap", (void*)&fBranchMap);
      R__insp.InspectMember("ExRootTreeReader::TBranchMap", (void*)&fBranchMap, "fBranchMap.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootTreeReader(void *p) {
      return  p ? new(p) ::ExRootTreeReader : new ::ExRootTreeReader;
   }
   static void *newArray_ExRootTreeReader(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootTreeReader[nElements] : new ::ExRootTreeReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootTreeReader(void *p) {
      delete ((::ExRootTreeReader*)p);
   }
   static void deleteArray_ExRootTreeReader(void *p) {
      delete [] ((::ExRootTreeReader*)p);
   }
   static void destruct_ExRootTreeReader(void *p) {
      typedef ::ExRootTreeReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTreeReader

//______________________________________________________________________________
namespace ROOT {
   void ExRootTreeBranch_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootTreeBranch.
      typedef ::ROOT::Shadow::ExRootTreeBranch ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeBranch*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &sobj->fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCapacity", &sobj->fCapacity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &sobj->fData);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootTreeBranch(void *p) {
      delete ((::ExRootTreeBranch*)p);
   }
   static void deleteArray_ExRootTreeBranch(void *p) {
      delete [] ((::ExRootTreeBranch*)p);
   }
   static void destruct_ExRootTreeBranch(void *p) {
      typedef ::ExRootTreeBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTreeBranch

//______________________________________________________________________________
void ExRootTreeWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootTreeWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootTreeWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootTreeWriter::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootTreeWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootTreeWriter.
      TClass *R__cl = ::ExRootTreeWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeName", &fTreeName);
      R__insp.InspectMember(fTreeName, "fTreeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranches", (void*)&fBranches);
      R__insp.InspectMember("set<ExRootTreeBranch*>", (void*)&fBranches, "fBranches.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootTreeWriter(void *p) {
      return  p ? new(p) ::ExRootTreeWriter : new ::ExRootTreeWriter;
   }
   static void *newArray_ExRootTreeWriter(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootTreeWriter[nElements] : new ::ExRootTreeWriter[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootTreeWriter(void *p) {
      delete ((::ExRootTreeWriter*)p);
   }
   static void deleteArray_ExRootTreeWriter(void *p) {
      delete [] ((::ExRootTreeWriter*)p);
   }
   static void destruct_ExRootTreeWriter(void *p) {
      typedef ::ExRootTreeWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTreeWriter

//______________________________________________________________________________
namespace ROOT {
   void ExRootResult_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootResult.
      typedef ::ROOT::Shadow::ExRootResult ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootResult*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvas", &sobj->fCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPool", (void*)&sobj->fPool);
      R__insp.InspectMember("set<TObject*>", (void*)&sobj->fPool, "fPool.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlots", (void*)&sobj->fPlots);
      R__insp.InspectMember("map<TObject*,TObjArray*>", (void*)&sobj->fPlots, "fPlots.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSettings", (void*)&sobj->fSettings);
      R__insp.InspectMember("map<TObject*,ExRootResult::PlotSettings>", (void*)&sobj->fSettings, "fSettings.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFolder", &sobj->fFolder);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootResult(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExRootResult : new ::ExRootResult;
   }
   static void *newArray_ExRootResult(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExRootResult[nElements] : new ::ExRootResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootResult(void *p) {
      delete ((::ExRootResult*)p);
   }
   static void deleteArray_ExRootResult(void *p) {
      delete [] ((::ExRootResult*)p);
   }
   static void destruct_ExRootResult(void *p) {
      typedef ::ExRootResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootResult

//______________________________________________________________________________
namespace ROOT {
   void ExRootClassifier_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootClassifier.
      typedef ::ROOT::Shadow::ExRootClassifier ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootClassifier*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootClassifier(void *p) {
      delete ((::ExRootClassifier*)p);
   }
   static void deleteArray_ExRootClassifier(void *p) {
      delete [] ((::ExRootClassifier*)p);
   }
   static void destruct_ExRootClassifier(void *p) {
      typedef ::ExRootClassifier current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootClassifier

//______________________________________________________________________________
namespace ROOT {
   void ExRootFilter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootFilter.
      typedef ::ROOT::Shadow::ExRootFilter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootFilter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCollection", &sobj->fCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIter", &sobj->fIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMap", (void*)&sobj->fMap);
      R__insp.InspectMember("map<ExRootClassifier*,std::pair<Bool_t,std::map<Int_t,TObjArray*> > >", (void*)&sobj->fMap, "fMap.", false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootFilter(void *p) {
      delete ((::ExRootFilter*)p);
   }
   static void deleteArray_ExRootFilter(void *p) {
      delete [] ((::ExRootFilter*)p);
   }
   static void destruct_ExRootFilter(void *p) {
      typedef ::ExRootFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootFilter

//______________________________________________________________________________
namespace ROOT {
   void ExRootProgressBar_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootProgressBar.
      typedef ::ROOT::Shadow::ExRootProgressBar ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootProgressBar*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntries", &sobj->fEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &sobj->fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &sobj->fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHashes", &sobj->fHashes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBar", &sobj->fBar);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootProgressBar(void *p) {
      delete ((::ExRootProgressBar*)p);
   }
   static void deleteArray_ExRootProgressBar(void *p) {
      delete [] ((::ExRootProgressBar*)p);
   }
   static void destruct_ExRootProgressBar(void *p) {
      typedef ::ExRootProgressBar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootProgressBar

//______________________________________________________________________________
void ExRootConfReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootConfReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootConfReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootConfReader::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootConfReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootConfReader.
      TClass *R__cl = ::ExRootConfReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTclInterp", &fTclInterp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModules", (void*)&fModules);
      R__insp.InspectMember("ExRootConfReader::ExRootTaskMap", (void*)&fModules, "fModules.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootConfReader(void *p) {
      return  p ? new(p) ::ExRootConfReader : new ::ExRootConfReader;
   }
   static void *newArray_ExRootConfReader(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootConfReader[nElements] : new ::ExRootConfReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootConfReader(void *p) {
      delete ((::ExRootConfReader*)p);
   }
   static void deleteArray_ExRootConfReader(void *p) {
      delete [] ((::ExRootConfReader*)p);
   }
   static void destruct_ExRootConfReader(void *p) {
      typedef ::ExRootConfReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootConfReader

//______________________________________________________________________________
void ExRootAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootAnalysis.
      TClass *R__cl = ::ExRootAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeFile", &fTreeFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInfoFile", &fInfoFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTclFileName", &fTclFileName);
      R__insp.InspectMember(fTclFileName, "fTclFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGFileName", &fPDGFileName);
      R__insp.InspectMember(fPDGFileName, "fPDGFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChains", &fChains);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConfReader", &fConfReader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeReader", &fTreeReader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeWriter", &fTreeWriter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFactory", &fFactory);
      ExRootTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootAnalysis(void *p) {
      return  p ? new(p) ::ExRootAnalysis : new ::ExRootAnalysis;
   }
   static void *newArray_ExRootAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootAnalysis[nElements] : new ::ExRootAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootAnalysis(void *p) {
      delete ((::ExRootAnalysis*)p);
   }
   static void deleteArray_ExRootAnalysis(void *p) {
      delete [] ((::ExRootAnalysis*)p);
   }
   static void destruct_ExRootAnalysis(void *p) {
      typedef ::ExRootAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootAnalysis

//______________________________________________________________________________
void ExRootFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootFactory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootFactory::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootFactory::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootFactory.
      TClass *R__cl = ::ExRootFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeWriter", &fTreeWriter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPermanentObjArrays", &fPermanentObjArrays);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakers", (void*)&fMakers);
      R__insp.InspectMember("map<const TClass*,ExRootTreeBranch*>", (void*)&fMakers, "fMakers.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPool", (void*)&fPool);
      R__insp.InspectMember("set<TObjArray*>", (void*)&fPool, "fPool.", true);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootFactory(void *p) {
      return  p ? new(p) ::ExRootFactory : new ::ExRootFactory;
   }
   static void *newArray_ExRootFactory(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootFactory[nElements] : new ::ExRootFactory[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootFactory(void *p) {
      delete ((::ExRootFactory*)p);
   }
   static void deleteArray_ExRootFactory(void *p) {
      delete [] ((::ExRootFactory*)p);
   }
   static void destruct_ExRootFactory(void *p) {
      typedef ::ExRootFactory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootFactory

//______________________________________________________________________________
void ExRootModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootModule::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootModule.
      TClass *R__cl = ::ExRootModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlotFolder", &fPlotFolder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExportFolder", &fExportFolder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeReader", &fTreeReader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeWriter", &fTreeWriter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFactory", &fFactory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlots", &fPlots);
      ExRootTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootModule(void *p) {
      delete ((::ExRootModule*)p);
   }
   static void deleteArray_ExRootModule(void *p) {
      delete [] ((::ExRootModule*)p);
   }
   static void destruct_ExRootModule(void *p) {
      typedef ::ExRootModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootModule

//______________________________________________________________________________
void ExRootTask::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootTask.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootTask::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootTask::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootTask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootTask.
      TClass *R__cl = ::ExRootTask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFolder", &fFolder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConfReader", &fConfReader);
      TTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootTask(void *p) {
      delete ((::ExRootTask*)p);
   }
   static void deleteArray_ExRootTask(void *p) {
      delete [] ((::ExRootTask*)p);
   }
   static void destruct_ExRootTask(void *p) {
      typedef ::ExRootTask current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTask

namespace ROOT {
   void maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR_Dictionary();
   static void *new_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p = 0);
   static void *newArray_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(Long_t size, void *p);
   static void delete_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p);
   static void deleteArray_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p);
   static void destruct_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >*)
   {
      map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >", -2, "prec_stl/map", 63,
                  typeid(map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >), DefineBehavior(ptr, ptr),
                  0, &maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >) );
      instance.SetNew(&new_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR);
      instance.SetNewArray(&newArray_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR);
      instance.SetDelete(&delete_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR);
      instance.SetDestructor(&destruct_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > > : new map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >;
   }
   static void *newArray_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >[nElements] : new map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p) {
      delete ((map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >*)p);
   }
   static void deleteArray_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p) {
      delete [] ((map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >*)p);
   }
   static void destruct_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUgRsPgRsPgR(void *p) {
      typedef map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<ExRootClassifier*,pair<bool,map<int,TObjArray*> > >

namespace ROOT {
   void maplETStringcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOTStringgR_Dictionary();
   static void *new_maplETStringcOTStringgR(void *p = 0);
   static void *newArray_maplETStringcOTStringgR(Long_t size, void *p);
   static void delete_maplETStringcOTStringgR(void *p);
   static void deleteArray_maplETStringcOTStringgR(void *p);
   static void destruct_maplETStringcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,TString>*)
   {
      map<TString,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,TString>", -2, "prec_stl/map", 63,
                  typeid(map<TString,TString>), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOTStringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,TString>) );
      instance.SetNew(&new_maplETStringcOTStringgR);
      instance.SetNewArray(&newArray_maplETStringcOTStringgR);
      instance.SetDelete(&delete_maplETStringcOTStringgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOTStringgR);
      instance.SetDestructor(&destruct_maplETStringcOTStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOTStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString> : new map<TString,TString>;
   }
   static void *newArray_maplETStringcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString>[nElements] : new map<TString,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOTStringgR(void *p) {
      delete ((map<TString,TString>*)p);
   }
   static void deleteArray_maplETStringcOTStringgR(void *p) {
      delete [] ((map<TString,TString>*)p);
   }
   static void destruct_maplETStringcOTStringgR(void *p) {
      typedef map<TString,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,TString>

namespace ROOT {
   void maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR_Dictionary();
   static void *new_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p = 0);
   static void *newArray_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(Long_t size, void *p);
   static void delete_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p);
   static void deleteArray_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p);
   static void destruct_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,pair<TBranch*,TClonesArray*> >*)
   {
      map<TString,pair<TBranch*,TClonesArray*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,pair<TBranch*,TClonesArray*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,pair<TBranch*,TClonesArray*> >", -2, "prec_stl/map", 63,
                  typeid(map<TString,pair<TBranch*,TClonesArray*> >), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,pair<TBranch*,TClonesArray*> >) );
      instance.SetNew(&new_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR);
      instance.SetNewArray(&newArray_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR);
      instance.SetDelete(&delete_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR);
      instance.SetDestructor(&destruct_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,pair<TBranch*,TClonesArray*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,pair<TBranch*,TClonesArray*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,pair<TBranch*,TClonesArray*> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,pair<TBranch*,TClonesArray*> > : new map<TString,pair<TBranch*,TClonesArray*> >;
   }
   static void *newArray_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,pair<TBranch*,TClonesArray*> >[nElements] : new map<TString,pair<TBranch*,TClonesArray*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p) {
      delete ((map<TString,pair<TBranch*,TClonesArray*> >*)p);
   }
   static void deleteArray_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p) {
      delete [] ((map<TString,pair<TBranch*,TClonesArray*> >*)p);
   }
   static void destruct_maplETStringcOpairlETBranchmUcOTClonesArraymUgRsPgR(void *p) {
      typedef map<TString,pair<TBranch*,TClonesArray*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,pair<TBranch*,TClonesArray*> >

namespace ROOT {
   void setlEExRootTreeBranchmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEExRootTreeBranchmUgR_Dictionary();
   static void *new_setlEExRootTreeBranchmUgR(void *p = 0);
   static void *newArray_setlEExRootTreeBranchmUgR(Long_t size, void *p);
   static void delete_setlEExRootTreeBranchmUgR(void *p);
   static void deleteArray_setlEExRootTreeBranchmUgR(void *p);
   static void destruct_setlEExRootTreeBranchmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<ExRootTreeBranch*>*)
   {
      set<ExRootTreeBranch*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<ExRootTreeBranch*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<ExRootTreeBranch*>", -2, "prec_stl/set", 49,
                  typeid(set<ExRootTreeBranch*>), DefineBehavior(ptr, ptr),
                  0, &setlEExRootTreeBranchmUgR_Dictionary, isa_proxy, 0,
                  sizeof(set<ExRootTreeBranch*>) );
      instance.SetNew(&new_setlEExRootTreeBranchmUgR);
      instance.SetNewArray(&newArray_setlEExRootTreeBranchmUgR);
      instance.SetDelete(&delete_setlEExRootTreeBranchmUgR);
      instance.SetDeleteArray(&deleteArray_setlEExRootTreeBranchmUgR);
      instance.SetDestructor(&destruct_setlEExRootTreeBranchmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<ExRootTreeBranch*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<ExRootTreeBranch*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEExRootTreeBranchmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<ExRootTreeBranch*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEExRootTreeBranchmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<ExRootTreeBranch*> : new set<ExRootTreeBranch*>;
   }
   static void *newArray_setlEExRootTreeBranchmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<ExRootTreeBranch*>[nElements] : new set<ExRootTreeBranch*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEExRootTreeBranchmUgR(void *p) {
      delete ((set<ExRootTreeBranch*>*)p);
   }
   static void deleteArray_setlEExRootTreeBranchmUgR(void *p) {
      delete [] ((set<ExRootTreeBranch*>*)p);
   }
   static void destruct_setlEExRootTreeBranchmUgR(void *p) {
      typedef set<ExRootTreeBranch*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<ExRootTreeBranch*>

/********************************************************
* tmp/src/ExRootAnalysisDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableExRootAnalysisDict();

extern "C" void G__set_cpp_environmentExRootAnalysisDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__cpp_reset_tagtableExRootAnalysisDict();
}
#include <new>
extern "C" int G__cpp_dllrevExRootAnalysisDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSortableObject */
static int G__ExRootAnalysisDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSortableObject*) G__getstructoffset())->GetCompare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSortableObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSortableObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSortableObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSortableObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSortableObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSortableObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSortableObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSortableObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSortableObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSortableObject G__TTSortableObject;
static int G__ExRootAnalysisDict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSortableObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSortableObject*) (soff+(sizeof(TSortableObject)*i)))->~G__TTSortableObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSortableObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSortableObject*) (soff))->~G__TTSortableObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSortableObject* dest = (TSortableObject*) G__getstructoffset();
   *dest = *(TSortableObject*) libp->para[0].ref;
   const TSortableObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootLHEFEvent */
static int G__ExRootAnalysisDict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootLHEFEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootLHEFEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootLHEFEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootLHEFEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootLHEFEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootLHEFEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootLHEFEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootLHEFEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootLHEFEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootLHEFEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootLHEFEvent[n];
     } else {
       p = new((void*) gvp) TRootLHEFEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootLHEFEvent;
     } else {
       p = new((void*) gvp) TRootLHEFEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootLHEFEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootLHEFEvent(*(TRootLHEFEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootLHEFEvent G__TTRootLHEFEvent;
static int G__ExRootAnalysisDict_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootLHEFEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootLHEFEvent*) (soff+(sizeof(TRootLHEFEvent)*i)))->~G__TTRootLHEFEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootLHEFEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootLHEFEvent*) (soff))->~G__TTRootLHEFEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootLHEFEvent* dest = (TRootLHEFEvent*) G__getstructoffset();
   *dest = *(TRootLHEFEvent*) libp->para[0].ref;
   const TRootLHEFEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootLHEFParticle */
static int G__ExRootAnalysisDict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootLHEFParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootLHEFParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootLHEFParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootLHEFParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootLHEFParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootLHEFParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootLHEFParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootLHEFParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootLHEFParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootLHEFParticle *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootLHEFParticle[n];
     } else {
       p = new((void*) gvp) TRootLHEFParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootLHEFParticle;
     } else {
       p = new((void*) gvp) TRootLHEFParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootLHEFParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootLHEFParticle(*(TRootLHEFParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootLHEFParticle G__TTRootLHEFParticle;
static int G__ExRootAnalysisDict_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootLHEFParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootLHEFParticle*) (soff+(sizeof(TRootLHEFParticle)*i)))->~G__TTRootLHEFParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootLHEFParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootLHEFParticle*) (soff))->~G__TTRootLHEFParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootLHEFParticle* dest = (TRootLHEFParticle*) G__getstructoffset();
   *dest = *(TRootLHEFParticle*) libp->para[0].ref;
   const TRootLHEFParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootGenEvent */
static int G__ExRootAnalysisDict_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootGenEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootGenEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootGenEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootGenEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootGenEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootGenEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootGenEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootGenEvent[n];
     } else {
       p = new((void*) gvp) TRootGenEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootGenEvent;
     } else {
       p = new((void*) gvp) TRootGenEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootGenEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootGenEvent(*(TRootGenEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootGenEvent G__TTRootGenEvent;
static int G__ExRootAnalysisDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootGenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootGenEvent*) (soff+(sizeof(TRootGenEvent)*i)))->~G__TTRootGenEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootGenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootGenEvent*) (soff))->~G__TTRootGenEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootGenEvent* dest = (TRootGenEvent*) G__getstructoffset();
   *dest = *(TRootGenEvent*) libp->para[0].ref;
   const TRootGenEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootGenParticle */
static int G__ExRootAnalysisDict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootGenParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootGenParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootGenParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootGenParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootGenParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootGenParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootGenParticle *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootGenParticle[n];
     } else {
       p = new((void*) gvp) TRootGenParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootGenParticle;
     } else {
       p = new((void*) gvp) TRootGenParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootGenParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootGenParticle(*(TRootGenParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootGenParticle G__TTRootGenParticle;
static int G__ExRootAnalysisDict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootGenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootGenParticle*) (soff+(sizeof(TRootGenParticle)*i)))->~G__TTRootGenParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootGenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootGenParticle*) (soff))->~G__TTRootGenParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootGenParticle* dest = (TRootGenParticle*) G__getstructoffset();
   *dest = *(TRootGenParticle*) libp->para[0].ref;
   const TRootGenParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootGenJet */
static int G__ExRootAnalysisDict_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootGenJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootGenJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootGenJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootGenJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootGenJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootGenJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootGenJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootGenJet *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootGenJet[n];
     } else {
       p = new((void*) gvp) TRootGenJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootGenJet;
     } else {
       p = new((void*) gvp) TRootGenJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootGenJet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootGenJet(*(TRootGenJet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootGenJet G__TTRootGenJet;
static int G__ExRootAnalysisDict_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootGenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootGenJet*) (soff+(sizeof(TRootGenJet)*i)))->~G__TTRootGenJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootGenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootGenJet*) (soff))->~G__TTRootGenJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootGenJet* dest = (TRootGenJet*) G__getstructoffset();
   *dest = *(TRootGenJet*) libp->para[0].ref;
   const TRootGenJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootEvent */
static int G__ExRootAnalysisDict_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootEvent[n];
     } else {
       p = new((void*) gvp) TRootEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootEvent;
     } else {
       p = new((void*) gvp) TRootEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootEvent(*(TRootEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootEvent G__TTRootEvent;
static int G__ExRootAnalysisDict_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootEvent*) (soff+(sizeof(TRootEvent)*i)))->~G__TTRootEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootEvent*) (soff))->~G__TTRootEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootEvent* dest = (TRootEvent*) G__getstructoffset();
   *dest = *(TRootEvent*) libp->para[0].ref;
   const TRootEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootMissingET */
static int G__ExRootAnalysisDict_200_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootMissingET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootMissingET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootMissingET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootMissingET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootMissingET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootMissingET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootMissingET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootMissingET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_200_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootMissingET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_200_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootMissingET *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootMissingET[n];
     } else {
       p = new((void*) gvp) TRootMissingET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootMissingET;
     } else {
       p = new((void*) gvp) TRootMissingET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_200_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootMissingET* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootMissingET(*(TRootMissingET*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootMissingET G__TTRootMissingET;
static int G__ExRootAnalysisDict_200_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootMissingET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootMissingET*) (soff+(sizeof(TRootMissingET)*i)))->~G__TTRootMissingET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootMissingET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootMissingET*) (soff))->~G__TTRootMissingET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_200_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootMissingET* dest = (TRootMissingET*) G__getstructoffset();
   *dest = *(TRootMissingET*) libp->para[0].ref;
   const TRootMissingET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootPhoton */
static int G__ExRootAnalysisDict_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootPhoton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootPhoton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootPhoton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootPhoton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootPhoton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootPhoton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootPhoton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootPhoton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootPhoton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootPhoton *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootPhoton[n];
     } else {
       p = new((void*) gvp) TRootPhoton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootPhoton;
     } else {
       p = new((void*) gvp) TRootPhoton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootPhoton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootPhoton(*(TRootPhoton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootPhoton G__TTRootPhoton;
static int G__ExRootAnalysisDict_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootPhoton*) (soff+(sizeof(TRootPhoton)*i)))->~G__TTRootPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootPhoton*) (soff))->~G__TTRootPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootPhoton* dest = (TRootPhoton*) G__getstructoffset();
   *dest = *(TRootPhoton*) libp->para[0].ref;
   const TRootPhoton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootElectron */
static int G__ExRootAnalysisDict_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootElectron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootElectron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootElectron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootElectron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootElectron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootElectron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootElectron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootElectron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootElectron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootElectron *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootElectron[n];
     } else {
       p = new((void*) gvp) TRootElectron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootElectron;
     } else {
       p = new((void*) gvp) TRootElectron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootElectron* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootElectron(*(TRootElectron*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootElectron G__TTRootElectron;
static int G__ExRootAnalysisDict_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootElectron*) (soff+(sizeof(TRootElectron)*i)))->~G__TTRootElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootElectron*) (soff))->~G__TTRootElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootElectron* dest = (TRootElectron*) G__getstructoffset();
   *dest = *(TRootElectron*) libp->para[0].ref;
   const TRootElectron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootMuon */
static int G__ExRootAnalysisDict_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootMuon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootMuon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootMuon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootMuon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootMuon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootMuon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootMuon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootMuon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootMuon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootMuon *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootMuon[n];
     } else {
       p = new((void*) gvp) TRootMuon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootMuon;
     } else {
       p = new((void*) gvp) TRootMuon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootMuon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootMuon(*(TRootMuon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootMuon G__TTRootMuon;
static int G__ExRootAnalysisDict_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootMuon*) (soff+(sizeof(TRootMuon)*i)))->~G__TTRootMuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootMuon*) (soff))->~G__TTRootMuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootMuon* dest = (TRootMuon*) G__getstructoffset();
   *dest = *(TRootMuon*) libp->para[0].ref;
   const TRootMuon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootTau */
static int G__ExRootAnalysisDict_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootTau::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootTau::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootTau::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootTau::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootTau*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootTau::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootTau::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootTau::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_204_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootTau::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootTau *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootTau[n];
     } else {
       p = new((void*) gvp) TRootTau[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootTau;
     } else {
       p = new((void*) gvp) TRootTau;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootTau* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootTau(*(TRootTau*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootTau G__TTRootTau;
static int G__ExRootAnalysisDict_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootTau*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootTau*) (soff+(sizeof(TRootTau)*i)))->~G__TTRootTau();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootTau*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootTau*) (soff))->~G__TTRootTau();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootTau* dest = (TRootTau*) G__getstructoffset();
   *dest = *(TRootTau*) libp->para[0].ref;
   const TRootTau& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootJet */
static int G__ExRootAnalysisDict_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRootJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRootJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRootJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRootJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRootJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRootJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ExRootAnalysisDict_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootJet *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootJet[n];
     } else {
       p = new((void*) gvp) TRootJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRootJet;
     } else {
       p = new((void*) gvp) TRootJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRootJet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRootJet(*(TRootJet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootJet G__TTRootJet;
static int G__ExRootAnalysisDict_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRootJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRootJet*) (soff+(sizeof(TRootJet)*i)))->~G__TTRootJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRootJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRootJet*) (soff))->~G__TTRootJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRootJet* dest = (TRootJet*) G__getstructoffset();
   *dest = *(TRootJet*) libp->para[0].ref;
   const TRootJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootTreeReader */
static int G__ExRootAnalysisDict_553_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeReader((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootTreeReader((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeReader[n];
       } else {
         p = new((void*) gvp) ExRootTreeReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeReader;
       } else {
         p = new((void*) gvp) ExRootTreeReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeReader*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const ExRootTreeReader*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ExRootTreeReader*) G__getstructoffset())->ReadEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeReader*) G__getstructoffset())->UseBranch((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootTreeReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootTreeReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootTreeReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_553_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_553_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootTreeReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootTreeReader(*(ExRootTreeReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTreeReader G__TExRootTreeReader;
static int G__ExRootAnalysisDict_553_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTreeReader*) (soff+(sizeof(ExRootTreeReader)*i)))->~G__TExRootTreeReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTreeReader*) (soff))->~G__TExRootTreeReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_553_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeReader* dest = (ExRootTreeReader*) G__getstructoffset();
   *dest = *(ExRootTreeReader*) libp->para[0].ref;
   const ExRootTreeReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootTreeBranch */
static int G__ExRootAnalysisDict_619_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeBranch(
(const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ExRootTreeBranch(
(const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeBranch((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootTreeBranch((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_619_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeBranch*) G__getstructoffset())->NewEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_619_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeBranch*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_619_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootTreeBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootTreeBranch(*(ExRootTreeBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTreeBranch G__TExRootTreeBranch;
static int G__ExRootAnalysisDict_619_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTreeBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTreeBranch*) (soff+(sizeof(ExRootTreeBranch)*i)))->~G__TExRootTreeBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTreeBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTreeBranch*) (soff))->~G__TExRootTreeBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_619_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeBranch* dest = (ExRootTreeBranch*) G__getstructoffset();
   *dest = *(ExRootTreeBranch*) libp->para[0].ref;
   const ExRootTreeBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootTreeWriter */
static int G__ExRootAnalysisDict_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeWriter((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootTreeWriter((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeWriter((TFile*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootTreeWriter((TFile*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeWriter[n];
       } else {
         p = new((void*) gvp) ExRootTreeWriter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeWriter;
       } else {
         p = new((void*) gvp) ExRootTreeWriter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->SetTreeFile((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->SetTreeName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeWriter*) G__getstructoffset())->NewBranch((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeWriter*) G__getstructoffset())->NewFactory((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->Fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->Write();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootTreeWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootTreeWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootTreeWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_620_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_620_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootTreeWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootTreeWriter(*(ExRootTreeWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTreeWriter G__TExRootTreeWriter;
static int G__ExRootAnalysisDict_620_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTreeWriter*) (soff+(sizeof(ExRootTreeWriter)*i)))->~G__TExRootTreeWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTreeWriter*) (soff))->~G__TExRootTreeWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_620_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeWriter* dest = (ExRootTreeWriter*) G__getstructoffset();
   *dest = *(ExRootTreeWriter*) libp->para[0].ref;
   const ExRootTreeWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootResult */
static int G__ExRootAnalysisDict_634_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootResult[n];
     } else {
       p = new((void*) gvp) ExRootResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootResult;
     } else {
       p = new((void*) gvp) ExRootResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootResult*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ExRootResult*) G__getstructoffset())->Write((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ExRootResult*) G__getstructoffset())->Write();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ExRootResult*) G__getstructoffset())->Print((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ExRootResult*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Axis_t) G__double(libp->para[8]), (Axis_t) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])));
      break;
   case 11:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Axis_t) G__double(libp->para[8]), (Axis_t) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Axis_t) G__double(libp->para[8]), (Axis_t) G__double(libp->para[9])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHistStack((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddLegend((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddComment((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootResult*) G__getstructoffset())->Attach((TObject*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((ExRootResult*) G__getstructoffset())->PrintPlot((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((ExRootResult*) G__getstructoffset())->PrintPlot((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ExRootResult*) G__getstructoffset())->PrintPlot((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_634_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootResult*) G__getstructoffset())->SetFolder((TFolder*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_634_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootResult* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootResult(*(ExRootResult*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootResult G__TExRootResult;
static int G__ExRootAnalysisDict_634_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootResult*) (soff+(sizeof(ExRootResult)*i)))->~G__TExRootResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootResult*) (soff))->~G__TExRootResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_634_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootResult* dest = (ExRootResult*) G__getstructoffset();
   *dest = *(ExRootResult*) libp->para[0].ref;
   const ExRootResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootClassifier */
static int G__ExRootAnalysisDict_657_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ExRootClassifier*) G__getstructoffset())->GetCategory((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootClassifier G__TExRootClassifier;
static int G__ExRootAnalysisDict_657_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootClassifier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootClassifier*) (soff+(sizeof(ExRootClassifier)*i)))->~G__TExRootClassifier();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootClassifier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootClassifier*) (soff))->~G__TExRootClassifier();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_657_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootClassifier* dest = (ExRootClassifier*) G__getstructoffset();
   *dest = *(ExRootClassifier*) libp->para[0].ref;
   const ExRootClassifier& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootFilter */
static int G__ExRootAnalysisDict_658_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ExRootFilter((TSeqCollection*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ExRootFilter((TSeqCollection*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_658_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ExRootFilter*) G__getstructoffset())->Reset((ExRootClassifier*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ExRootFilter*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_658_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootFilter*) G__getstructoffset())->GetSubArray((ExRootClassifier*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_658_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootFilter(*(ExRootFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootFilter G__TExRootFilter;
static int G__ExRootAnalysisDict_658_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootFilter*) (soff+(sizeof(ExRootFilter)*i)))->~G__TExRootFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootFilter*) (soff))->~G__TExRootFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootProgressBar */
static int G__ExRootAnalysisDict_677_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootProgressBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootProgressBar*) G__getstructoffset())->Update((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_677_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootProgressBar*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_677_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootProgressBar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootProgressBar(*(ExRootProgressBar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootProgressBar G__TExRootProgressBar;
static int G__ExRootAnalysisDict_677_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootProgressBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootProgressBar*) (soff+(sizeof(ExRootProgressBar)*i)))->~G__TExRootProgressBar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootProgressBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootProgressBar*) (soff))->~G__TExRootProgressBar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootProgressBar* dest = (ExRootProgressBar*) G__getstructoffset();
   *dest = *(ExRootProgressBar*) libp->para[0].ref;
   const ExRootProgressBar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootConfReader */
static int G__ExRootAnalysisDict_681_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootConfReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootConfReader[n];
     } else {
       p = new((void*) gvp) ExRootConfReader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootConfReader;
     } else {
       p = new((void*) gvp) ExRootConfReader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootConfReader*) G__getstructoffset())->ReadFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ExRootConfReader*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ExRootConfReader*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 108, (long) ((ExRootConfReader*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 108, (long) ((ExRootConfReader*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((ExRootConfReader*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((ExRootConfReader*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ExRootConfReader*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ExRootConfReader*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((ExRootConfReader*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((ExRootConfReader*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ExRootConfParam* pobj;
         ExRootConfParam xobj = ((ExRootConfReader*) G__getstructoffset())->GetParam((const char*) G__int(libp->para[0]));
         pobj = new ExRootConfParam(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ExRootConfReader*) G__getstructoffset())->GetModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootConfReader*) G__getstructoffset())->AddModule((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootConfReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootConfReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootConfReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootConfReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootConfReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootConfReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootConfReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootConfReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_681_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootConfReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_681_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootConfReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootConfReader(*(ExRootConfReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootConfReader G__TExRootConfReader;
static int G__ExRootAnalysisDict_681_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootConfReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootConfReader*) (soff+(sizeof(ExRootConfReader)*i)))->~G__TExRootConfReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootConfReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootConfReader*) (soff))->~G__TExRootConfReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_681_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootConfReader* dest = (ExRootConfReader*) G__getstructoffset();
   *dest = *(ExRootConfReader*) libp->para[0].ref;
   const ExRootConfReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootTask */
static int G__ExRootAnalysisDict_690_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->InitTask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->ProcessEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->FinishTask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTask*) G__getstructoffset())->NewTask((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTask*) G__getstructoffset())->NewTask((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ExRootTask*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ExRootTask*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 108, (long) ((ExRootTask*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 108, (long) ((ExRootTask*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((ExRootTask*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((ExRootTask*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ExRootTask*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ExRootTask*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((ExRootTask*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((ExRootTask*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ExRootConfParam* pobj;
         ExRootConfParam xobj = ((ExRootTask*) G__getstructoffset())->GetParam((const char*) G__int(libp->para[0]));
         pobj = new ExRootConfParam(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->SetFolder((TFolder*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->SetConfReader((ExRootConfReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootTask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootTask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootTask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_690_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTask G__TExRootTask;
static int G__ExRootAnalysisDict_690_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTask*) (soff+(sizeof(ExRootTask)*i)))->~G__TExRootTask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTask*) (soff))->~G__TExRootTask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_690_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTask* dest = (ExRootTask*) G__getstructoffset();
   *dest = *(ExRootTask*) libp->para[0].ref;
   const ExRootTask& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootFactory */
static int G__ExRootAnalysisDict_691_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootFactory* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootFactory[n];
     } else {
       p = new((void*) gvp) ExRootFactory[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootFactory;
     } else {
       p = new((void*) gvp) ExRootFactory;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootFactory*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootFactory*) G__getstructoffset())->NewArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootFactory*) G__getstructoffset())->NewPermanentArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootFactory*) G__getstructoffset())->New((TClass*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_691_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_691_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootFactory(*(ExRootFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootFactory G__TExRootFactory;
static int G__ExRootAnalysisDict_691_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootFactory*) (soff+(sizeof(ExRootFactory)*i)))->~G__TExRootFactory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootFactory*) (soff))->~G__TExRootFactory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_691_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootFactory* dest = (ExRootFactory*) G__getstructoffset();
   *dest = *(ExRootFactory*) libp->para[0].ref;
   const ExRootFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootAnalysis */
static int G__ExRootAnalysisDict_692_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootAnalysis[n];
     } else {
       p = new((void*) gvp) ExRootAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootAnalysis;
     } else {
       p = new((void*) gvp) ExRootAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootAnalysis*) G__getstructoffset())->SetTclFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootAnalysis*) G__getstructoffset())->SetPDGFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const ExRootAnalysis*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ExRootAnalysis*) G__getstructoffset())->ReadEvent((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootAnalysis*) G__getstructoffset())->Loop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootAnalysis*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_692_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_692_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootAnalysis(*(ExRootAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootAnalysis G__TExRootAnalysis;
static int G__ExRootAnalysisDict_692_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootAnalysis*) (soff+(sizeof(ExRootAnalysis)*i)))->~G__TExRootAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootAnalysis*) (soff))->~G__TExRootAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_692_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootAnalysis* dest = (ExRootAnalysis*) G__getstructoffset();
   *dest = *(ExRootAnalysis*) libp->para[0].ref;
   const ExRootAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootModule */
static int G__ExRootAnalysisDict_709_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootModule*) G__getstructoffset())->ImportArray((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootModule*) G__getstructoffset())->ExportArray((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootModule*) G__getstructoffset())->UseBranch((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootModule*) G__getstructoffset())->NewBranch((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootModule*) G__getstructoffset())->GetPlots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootModule*) G__getstructoffset())->GetFactory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_709_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootModule G__TExRootModule;
static int G__ExRootAnalysisDict_709_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootModule*) (soff+(sizeof(ExRootModule)*i)))->~G__TExRootModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootModule*) (soff))->~G__TExRootModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_709_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootModule* dest = (ExRootModule*) G__getstructoffset();
   *dest = *(ExRootModule*) libp->para[0].ref;
   const ExRootModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__ExRootAnalysisDict__0_2013(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      HistStyle((TH1*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      HistStyle((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict__0_2014(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) FillChain((TChain*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TSortableObject */

/* TRootLHEFEvent */

/* TRootLHEFParticle */

/* TRootGenEvent */

/* TRootGenParticle */

/* TRootGenJet */

/* TRootEvent */

/* TRootMissingET */

/* TRootPhoton */

/* TRootElectron */

/* TRootMuon */

/* TRootTau */

/* TRootJet */

/* ExRootTreeReader */

/* ExRootTreeBranch */

/* ExRootTreeWriter */

/* ExRootResult */

/* ExRootClassifier */

/* ExRootFilter */

/* ExRootProgressBar */

/* ExRootConfReader */

/* ExRootTask */

/* ExRootFactory */

/* ExRootAnalysis */

/* ExRootModule */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncExRootAnalysisDict {
 public:
  G__Sizep2memfuncExRootAnalysisDict(): p(&G__Sizep2memfuncExRootAnalysisDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncExRootAnalysisDict::*p)();
};

size_t G__get_sizep2memfuncExRootAnalysisDict()
{
  G__Sizep2memfuncExRootAnalysisDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceExRootAnalysisDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject))) {
     TSortableObject *G__Lderived;
     G__Lderived=(TSortableObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent))) {
     TRootLHEFEvent *G__Lderived;
     G__Lderived=(TRootLHEFEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle))) {
     TRootLHEFParticle *G__Lderived;
     G__Lderived=(TRootLHEFParticle*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent))) {
     TRootGenEvent *G__Lderived;
     G__Lderived=(TRootGenEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle))) {
     TRootGenParticle *G__Lderived;
     G__Lderived=(TRootGenParticle*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet))) {
     TRootGenJet *G__Lderived;
     G__Lderived=(TRootGenJet*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent))) {
     TRootEvent *G__Lderived;
     G__Lderived=(TRootEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET))) {
     TRootMissingET *G__Lderived;
     G__Lderived=(TRootMissingET*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton))) {
     TRootPhoton *G__Lderived;
     G__Lderived=(TRootPhoton*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron))) {
     TRootElectron *G__Lderived;
     G__Lderived=(TRootElectron*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon))) {
     TRootMuon *G__Lderived;
     G__Lderived=(TRootMuon*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau))) {
     TRootTau *G__Lderived;
     G__Lderived=(TRootTau*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet))) {
     TRootJet *G__Lderived;
     G__Lderived=(TRootJet*)0x1000;
     {
       TSortableObject *G__Lpbase=(TSortableObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader))) {
     ExRootTreeReader *G__Lderived;
     G__Lderived=(ExRootTreeReader*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter))) {
     ExRootTreeWriter *G__Lderived;
     G__Lderived=(ExRootTreeWriter*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader))) {
     ExRootConfReader *G__Lderived;
     G__Lderived=(ExRootConfReader*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask))) {
     ExRootTask *G__Lderived;
     G__Lderived=(ExRootTask*)0x1000;
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory))) {
     ExRootFactory *G__Lderived;
     G__Lderived=(ExRootFactory*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis))) {
     ExRootAnalysis *G__Lderived;
     G__Lderived=(ExRootAnalysis*)0x1000;
     {
       ExRootTask *G__Lpbase=(ExRootTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule))) {
     ExRootModule *G__Lderived;
     G__Lderived=(ExRootModule*)0x1000;
     {
       ExRootTask *G__Lpbase=(ExRootTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableExRootAnalysisDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("Axis_t",100,-1,0,-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::pair<TBranch*,TClonesArray*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,pair<TBranch*,TClonesArray*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,pair<TBranch*,TClonesArray*>,less<TString> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TBranchMap",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<ExRootTreeBranch*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<ExRootTreeBranch*,less<ExRootTreeBranch*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TObject*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TObject*,less<TObject*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TObject*,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOTObjArraymUcOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TObject*,TObjArray*,less<TObject*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOTObjArraymUcOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TObject*,ExRootResult::PlotSettings>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TObject*,ExRootResult::PlotSettings,less<TObject*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TObjArray*,less<int> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Bool_t,std::map<Int_t,TObjArray*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ExRootClassifier*,std::pair<Bool_t,std::map<Int_t,TObjArray*> > >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ExRootClassifier*,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > > >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ExRootClassifier*,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > >,less<ExRootClassifier*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ExRootTaskMap",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const TClass*,ExRootTreeBranch*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEconstsPTClassmUcOExRootTreeBranchmUcOlesslEconstsPTClassmUgRcOallocatorlEpairlEconstsPTClassmUsPconstcOExRootTreeBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const TClass*,ExRootTreeBranch*,less<const TClass*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEconstsPTClassmUcOExRootTreeBranchmUcOlesslEconstsPTClassmUgRcOallocatorlEpairlEconstsPTClassmUsPconstcOExRootTreeBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjArraymUcOlesslETObjArraymUgRcOallocatorlETObjArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TObjArray*,less<TObjArray*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjArraymUcOlesslETObjArraymUgRcOallocatorlETObjArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSortableObject */
static void G__setup_memvarTSortableObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject));
   { TSortableObject *p; p=(TSortableObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootLHEFEvent */
static void G__setup_memvarTRootLHEFEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent));
   { TRootLHEFEvent *p; p=(TRootLHEFEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"Number=",0,"event number");
   G__memvar_setup((void*)((long)(&p->Nparticles)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Nparticles=",0,"number of particles in the event | hepup.NUP");
   G__memvar_setup((void*)((long)(&p->ProcessID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ProcessID=",0,"subprocess code for the event | hepup.IDPRUP");
   G__memvar_setup((void*)((long)(&p->Weight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Weight=",0,"weight for the event | hepup.XWGTUP");
   G__memvar_setup((void*)((long)(&p->ScalePDF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ScalePDF=",0,"scale in GeV used in the calculation of the PDFs in the event | hepup.SCALUP");
   G__memvar_setup((void*)((long)(&p->CouplingQED)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"CouplingQED=",0,"value of the QED coupling used in the event | hepup.AQEDUP");
   G__memvar_setup((void*)((long)(&p->CouplingQCD)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"CouplingQCD=",0,"value of the QCD coupling used in the event | hepup.AQCDUP");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootLHEFParticle */
static void G__setup_memvarTRootLHEFParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle));
   { TRootLHEFParticle *p; p=(TRootLHEFParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PID=",0,"particle HEP ID number | hepup.IDUP[number]");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Status=",0,"particle status code | hepup.ISTUP[number]");
   G__memvar_setup((void*)((long)(&p->Mother1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Mother1=",0,"index for the particle first mother | hepup.MOTHUP[number][0]");
   G__memvar_setup((void*)((long)(&p->Mother2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Mother2=",0,"index for the particle last mother | hepup.MOTHUP[number][1]");
   G__memvar_setup((void*)((long)(&p->ColorLine1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ColorLine1=",0,"index for the particle color-line | hepup.ICOLUP[number][0]");
   G__memvar_setup((void*)((long)(&p->ColorLine2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ColorLine2=",0,"index for the particle anti-color-line | hepup.ICOLUP[number][1]");
   G__memvar_setup((void*)((long)(&p->Px)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Px=",0,"particle momentum vector (x component) | hepup.PUP[number][0]");
   G__memvar_setup((void*)((long)(&p->Py)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Py=",0,"particle momentum vector (y component) | hepup.PUP[number][1]");
   G__memvar_setup((void*)((long)(&p->Pz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Pz=",0,"particle momentum vector (z component) | hepup.PUP[number][2]");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"E=",0,"particle energy | hepup.PUP[number][3]");
   G__memvar_setup((void*)((long)(&p->M)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"M=",0,"particle mass | hepup.PUP[number][4]");
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"particle transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"particle pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"particle azimuthal angle");
   G__memvar_setup((void*)((long)(&p->Rapidity)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Rapidity=",0,"particle rapidity");
   G__memvar_setup((void*)((long)(&p->LifeTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LifeTime=",0,"particle invariant lifetime");
   G__memvar_setup((void*)((long)(&p->Spin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Spin=",0,"cosine of the angle between the particle spin vector");
   G__memvar_setup((void*)(&TRootLHEFParticle::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootGenEvent */
static void G__setup_memvarTRootGenEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent));
   { TRootGenEvent *p; p=(TRootGenEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"Number=",0,"event number | hepevt.nevhep");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootGenParticle */
static void G__setup_memvarTRootGenParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle));
   { TRootGenParticle *p; p=(TRootGenParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PID=",0,"particle HEP ID number | hepevt.idhep[number]");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Status=",0,"particle status | hepevt.isthep[number]");
   G__memvar_setup((void*)((long)(&p->M1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"M1=",0,"particle 1st mother | hepevt.jmohep[number][0] - 1");
   G__memvar_setup((void*)((long)(&p->M2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"M2=",0,"particle 2nd mother | hepevt.jmohep[number][1] - 1");
   G__memvar_setup((void*)((long)(&p->D1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"D1=",0,"particle 1st daughter | hepevt.jdahep[number][0] - 1");
   G__memvar_setup((void*)((long)(&p->D2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"D2=",0,"particle 2nd daughter | hepevt.jdahep[number][1] - 1");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"E=",0,"particle energy | hepevt.phep[number][3]");
   G__memvar_setup((void*)((long)(&p->Px)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Px=",0,"particle momentum vector (x component) | hepevt.phep[number][0]");
   G__memvar_setup((void*)((long)(&p->Py)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Py=",0,"particle momentum vector (y component) | hepevt.phep[number][1]");
   G__memvar_setup((void*)((long)(&p->Pz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Pz=",0,"particle momentum vector (z component) | hepevt.phep[number][2]");
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"particle transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"particle pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"particle azimuthal angle");
   G__memvar_setup((void*)((long)(&p->Rapidity)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Rapidity=",0,"particle rapidity");
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"T=",0,"particle vertex position (t component) | hepevt.vhep[number][3]");
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"X=",0,"particle vertex position (x component) | hepevt.vhep[number][0]");
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Y=",0,"particle vertex position (y component) | hepevt.vhep[number][1]");
   G__memvar_setup((void*)((long)(&p->Z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Z=",0,"particle vertex position (z component) | hepevt.vhep[number][2]");
   G__memvar_setup((void*)(&TRootGenParticle::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootGenJet */
static void G__setup_memvarTRootGenJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet));
   { TRootGenJet *p; p=(TRootGenJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"E=",0,"jet energy");
   G__memvar_setup((void*)((long)(&p->Px)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Px=",0,"jet momentum vector (x component)");
   G__memvar_setup((void*)((long)(&p->Py)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Py=",0,"jet momentum vector (y component)");
   G__memvar_setup((void*)((long)(&p->Pz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Pz=",0,"jet momentum vector (z component)");
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"jet transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"jet pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"jet azimuthal angle");
   G__memvar_setup((void*)((long)(&p->Rapidity)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Rapidity=",0,"jet rapidity");
   G__memvar_setup((void*)((long)(&p->Mass)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Mass=",0,"jet invariant mass");
   G__memvar_setup((void*)(&TRootGenJet::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootEvent */
static void G__setup_memvarTRootEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent));
   { TRootEvent *p; p=(TRootEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"Number=",0,"event number");
   G__memvar_setup((void*)((long)(&p->Trigger)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Trigger=",0,"trigger word");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootMissingET */
static void G__setup_memvarTRootMissingET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET));
   { TRootMissingET *p; p=(TRootMissingET*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MET)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MET=",0,"mising transverse energy");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"mising energy azimuthal angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootPhoton */
static void G__setup_memvarTRootPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton));
   { TRootPhoton *p; p=(TRootPhoton*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"photon transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"photon pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"photon azimuthal angle");
   G__memvar_setup((void*)((long)(&p->EhadOverEem)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EhadOverEem=",0,"ratio of the hadronic versus electromagnetic energy");
   G__memvar_setup((void*)(&TRootPhoton::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootElectron */
static void G__setup_memvarTRootElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron));
   { TRootElectron *p; p=(TRootElectron*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"electron transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"electron pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"electron azimuthal angle");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Charge=",0,"electron charge");
   G__memvar_setup((void*)((long)(&p->Ntrk)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ntrk=",0,"number of tracks associated with the electron");
   G__memvar_setup((void*)((long)(&p->EhadOverEem)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EhadOverEem=",0,"ratio of the hadronic versus electromagnetic energy");
   G__memvar_setup((void*)(&TRootElectron::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootMuon */
static void G__setup_memvarTRootMuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon));
   { TRootMuon *p; p=(TRootMuon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"muon transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"muon pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"muon azimuthal angle");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Charge=",0,"muon charge");
   G__memvar_setup((void*)((long)(&p->Ntrk)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ntrk=",0,"number of tracks associated with the muon");
   G__memvar_setup((void*)((long)(&p->PTiso)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PTiso=",0,"sum of tracks transverse momentum within a cone of radius R=0.4");
   G__memvar_setup((void*)((long)(&p->ETiso)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ETiso=",0,"ratio of ET in a 3x3 calorimeter cells array around the muon");
   G__memvar_setup((void*)((long)(&p->JetIndex)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"JetIndex=",0,"index of the closest jet");
   G__memvar_setup((void*)(&TRootMuon::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootTau */
static void G__setup_memvarTRootTau(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau));
   { TRootTau *p; p=(TRootTau*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"tau transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"tau pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"tau azimuthal angle");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Charge=",0,"tau charge");
   G__memvar_setup((void*)((long)(&p->Ntrk)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ntrk=",0,"number of charged tracks associated with the tau");
   G__memvar_setup((void*)((long)(&p->EhadOverEem)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EhadOverEem=",0,"ratio of the hadronic versus electromagnetic energy");
   G__memvar_setup((void*)(&TRootTau::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootJet */
static void G__setup_memvarTRootJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet));
   { TRootJet *p; p=(TRootJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT=",0,"jet transverse momentum");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Eta=",0,"jet pseudorapidity");
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Phi=",0,"jet azimuthal angle");
   G__memvar_setup((void*)((long)(&p->Mass)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Mass=",0,"jet invariant mass");
   G__memvar_setup((void*)((long)(&p->Ntrk)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ntrk=",0,"number of tracks associated with the jet");
   G__memvar_setup((void*)((long)(&p->BTag)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BTag=",0,"1 or 2 for a jet that has been tagged as containing a heavy quark");
   G__memvar_setup((void*)((long)(&p->EhadOverEem)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EhadOverEem=",0,"ratio of the hadronic versus electromagnetic energy");
   G__memvar_setup((void*)((long)(&p->Index)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Index=",0,"jet index in the LHC Olympics file");
   G__memvar_setup((void*)(&TRootJet::fgCompare),85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare),-1,-2,1,"fgCompare=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootTreeReader */
static void G__setup_memvarExRootTreeReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   { ExRootTreeReader *p; p=(ExRootTreeReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTree),-1,-1,4,"fChain=",0,"pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentTree=",0,"current Tree number in a TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder),-1,-1,4,"fFolder=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),G__defined_typename("TBranchMap"),-1,4,"fBranchMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootTreeBranch */
static void G__setup_memvarExRootTreeBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   { ExRootTreeBranch *p; p=(ExRootTreeBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCapacity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClonesArray),-1,-1,4,"fData=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootTreeWriter */
static void G__setup_memvarExRootTreeWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   { ExRootTreeWriter *p; p=(ExRootTreeWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFile),-1,-1,4,"fFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTree),-1,-1,4,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TString),-1,-1,4,"fTreeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR),G__defined_typename("set<ExRootTreeBranch*>"),-1,4,"fBranches=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootResult */
static void G__setup_memvarExRootResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   { ExRootResult *p; p=(ExRootResult*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCanvas),-1,-1,4,"fCanvas=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR),G__defined_typename("set<TObject*>"),-1,4,"fPool=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOTObjArraymUcOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOTObjArraymUgRsPgRsPgR),G__defined_typename("map<TObject*,TObjArray*>"),-1,4,"fPlots=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR),G__defined_typename("map<TObject*,ExRootResult::PlotSettings>"),-1,4,"fSettings=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder),-1,-1,4,"fFolder=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* ExRootClassifier */
static void G__setup_memvarExRootClassifier(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootClassifier));
   { ExRootClassifier *p; p=(ExRootClassifier*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootFilter */
static void G__setup_memvarExRootFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   { ExRootFilter *p; p=(ExRootFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSeqCollection),-1,-1,4,"fCollection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TIterator),-1,-1,4,"fIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<ExRootClassifier*,std::pair<Bool_t,std::map<Int_t,TObjArray*> > >"),-1,4,"fMap=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootProgressBar */
static void G__setup_memvarExRootProgressBar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   { ExRootProgressBar *p; p=(ExRootProgressBar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHashes=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fBar=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootConfReader */
static void G__setup_memvarExRootConfReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   { ExRootConfReader *p; p=(ExRootConfReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_Tcl_Interp),-1,-1,4,"fTclInterp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("ExRootTaskMap"),-1,4,"fModules=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootTask */
static void G__setup_memvarExRootTask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask));
   { ExRootTask *p; p=(ExRootTask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder),-1,-1,4,"fFolder=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader),-1,-1,4,"fConfReader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootFactory */
static void G__setup_memvarExRootFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory));
   { ExRootFactory *p; p=(ExRootFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter),-1,-1,4,"fTreeWriter=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch),-1,-1,4,"fPermanentObjArrays=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEconstsPTClassmUcOExRootTreeBranchmUcOlesslEconstsPTClassmUgRcOallocatorlEpairlEconstsPTClassmUsPconstcOExRootTreeBranchmUgRsPgRsPgR),G__defined_typename("map<const TClass*,ExRootTreeBranch*>"),-1,4,"fMakers=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjArraymUcOlesslETObjArraymUgRcOallocatorlETObjArraymUgRsPgR),G__defined_typename("set<TObjArray*>"),-1,4,"fPool=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootAnalysis */
static void G__setup_memvarExRootAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis));
   { ExRootAnalysis *p; p=(ExRootAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFile),-1,-1,4,"fTreeFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFile),-1,-1,4,"fInfoFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TString),-1,-1,4,"fTclFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TString),-1,-1,4,"fPDGFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObjArray),-1,-1,4,"fChains=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader),-1,-1,4,"fConfReader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader),-1,-1,4,"fTreeReader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter),-1,-1,4,"fTreeWriter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory),-1,-1,4,"fFactory=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootModule */
static void G__setup_memvarExRootModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule));
   { ExRootModule *p; p=(ExRootModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder),-1,-1,4,"fPlotFolder=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder),-1,-1,4,"fExportFolder=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader),-1,-1,4,"fTreeReader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter),-1,-1,4,"fTreeWriter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory),-1,-1,4,"fFactory=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult),-1,-1,4,"fPlots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarExRootAnalysisDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSortableObject(void) {
   /* TSortableObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject));
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCompare",999,G__ExRootAnalysisDict_193_0_3, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_193_0_4, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSortableObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_193_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSortableObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_193_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSortableObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_193_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSortableObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_193_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_193_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSortableObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_193_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSortableObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_193_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSortableObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_193_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSortableObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSortableObject", 1637, G__ExRootAnalysisDict_193_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_193_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSortableObject), -1, 1, 1, 1, 1, 0, "u 'TSortableObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootLHEFEvent(void) {
   /* TRootLHEFEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent));
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_194_0_1, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootLHEFEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_194_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootLHEFEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_194_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootLHEFEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_194_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootLHEFEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_194_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_194_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootLHEFEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_194_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootLHEFEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_194_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootLHEFEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_194_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootLHEFEvent::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootLHEFEvent", 1305, G__ExRootAnalysisDict_194_0_13, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootLHEFEvent", 1305, G__ExRootAnalysisDict_194_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent), -1, 0, 1, 1, 1, 0, "u 'TRootLHEFEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootLHEFEvent", 1431, G__ExRootAnalysisDict_194_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_194_0_16, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFEvent), -1, 1, 1, 1, 1, 0, "u 'TRootLHEFEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootLHEFParticle(void) {
   /* TRootLHEFParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_195_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootLHEFParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_195_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootLHEFParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_195_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootLHEFParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_195_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootLHEFParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_195_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_195_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootLHEFParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_195_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootLHEFParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_195_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootLHEFParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_195_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootLHEFParticle::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootLHEFParticle", 1611, G__ExRootAnalysisDict_195_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootLHEFParticle", 1611, G__ExRootAnalysisDict_195_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle), -1, 0, 1, 1, 1, 0, "u 'TRootLHEFParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootLHEFParticle", 1737, G__ExRootAnalysisDict_195_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_195_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootLHEFParticle), -1, 1, 1, 1, 1, 0, "u 'TRootLHEFParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootGenEvent(void) {
   /* TRootGenEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent));
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_196_0_1, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootGenEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_196_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_196_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootGenEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_196_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootGenEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_196_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_196_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_196_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootGenEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_196_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_196_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootGenEvent::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootGenEvent", 1300, G__ExRootAnalysisDict_196_0_13, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootGenEvent", 1300, G__ExRootAnalysisDict_196_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent), -1, 0, 1, 1, 1, 0, "u 'TRootGenEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootGenEvent", 1426, G__ExRootAnalysisDict_196_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_196_0_16, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenEvent), -1, 1, 1, 1, 1, 0, "u 'TRootGenEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootGenParticle(void) {
   /* TRootGenParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_197_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootGenParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_197_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_197_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootGenParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_197_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootGenParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_197_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_197_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_197_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootGenParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_197_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_197_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootGenParticle::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootGenParticle", 1606, G__ExRootAnalysisDict_197_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootGenParticle", 1606, G__ExRootAnalysisDict_197_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle), -1, 0, 1, 1, 1, 0, "u 'TRootGenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootGenParticle", 1732, G__ExRootAnalysisDict_197_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_197_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenParticle), -1, 1, 1, 1, 1, 0, "u 'TRootGenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootGenJet(void) {
   /* TRootGenJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_198_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootGenJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_198_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_198_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootGenJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_198_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootGenJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_198_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_198_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_198_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootGenJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_198_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootGenJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_198_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootGenJet::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootGenJet", 1077, G__ExRootAnalysisDict_198_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootGenJet", 1077, G__ExRootAnalysisDict_198_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet), -1, 0, 1, 1, 1, 0, "u 'TRootGenJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootGenJet", 1203, G__ExRootAnalysisDict_198_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_198_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootGenJet), -1, 1, 1, 1, 1, 0, "u 'TRootGenJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootEvent(void) {
   /* TRootEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent));
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_199_0_1, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_199_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_199_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_199_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_199_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_199_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_199_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_199_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_199_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootEvent::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootEvent", 1018, G__ExRootAnalysisDict_199_0_13, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootEvent", 1018, G__ExRootAnalysisDict_199_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent), -1, 0, 1, 1, 1, 0, "u 'TRootEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootEvent", 1144, G__ExRootAnalysisDict_199_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_199_0_16, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootEvent), -1, 1, 1, 1, 1, 0, "u 'TRootEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootMissingET(void) {
   /* TRootMissingET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET));
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_200_0_1, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootMissingET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_200_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootMissingET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_200_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootMissingET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_200_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootMissingET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_200_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_200_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootMissingET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_200_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootMissingET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_200_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootMissingET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_200_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootMissingET::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootMissingET", 1387, G__ExRootAnalysisDict_200_0_13, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootMissingET", 1387, G__ExRootAnalysisDict_200_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET), -1, 0, 1, 1, 1, 0, "u 'TRootMissingET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootMissingET", 1513, G__ExRootAnalysisDict_200_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_200_0_16, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMissingET), -1, 1, 1, 1, 1, 0, "u 'TRootMissingET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootPhoton(void) {
   /* TRootPhoton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_201_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootPhoton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_201_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootPhoton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_201_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootPhoton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_201_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootPhoton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_201_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_201_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootPhoton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_201_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootPhoton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_201_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootPhoton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_201_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootPhoton::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootPhoton", 1136, G__ExRootAnalysisDict_201_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootPhoton", 1136, G__ExRootAnalysisDict_201_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton), -1, 0, 1, 1, 1, 0, "u 'TRootPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootPhoton", 1262, G__ExRootAnalysisDict_201_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_201_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootPhoton), -1, 1, 1, 1, 1, 0, "u 'TRootPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootElectron(void) {
   /* TRootElectron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_202_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootElectron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_202_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootElectron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_202_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootElectron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_202_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootElectron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_202_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_202_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootElectron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_202_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootElectron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_202_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootElectron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_202_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootElectron::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootElectron", 1332, G__ExRootAnalysisDict_202_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootElectron", 1332, G__ExRootAnalysisDict_202_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron), -1, 0, 1, 1, 1, 0, "u 'TRootElectron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootElectron", 1458, G__ExRootAnalysisDict_202_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_202_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootElectron), -1, 1, 1, 1, 1, 0, "u 'TRootElectron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootMuon(void) {
   /* TRootMuon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_203_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootMuon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_203_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootMuon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_203_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootMuon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_203_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootMuon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_203_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_203_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootMuon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_203_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootMuon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_203_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootMuon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_203_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootMuon::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootMuon", 919, G__ExRootAnalysisDict_203_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootMuon", 919, G__ExRootAnalysisDict_203_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon), -1, 0, 1, 1, 1, 0, "u 'TRootMuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootMuon", 1045, G__ExRootAnalysisDict_203_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_203_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootMuon), -1, 1, 1, 1, 1, 0, "u 'TRootMuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootTau(void) {
   /* TRootTau */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_204_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootTau::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_204_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootTau::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_204_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootTau::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_204_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootTau::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_204_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_204_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootTau::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_204_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootTau::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_204_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootTau::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_204_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootTau::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootTau", 802, G__ExRootAnalysisDict_204_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootTau", 802, G__ExRootAnalysisDict_204_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau), -1, 0, 1, 1, 1, 0, "u 'TRootTau' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootTau", 928, G__ExRootAnalysisDict_204_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_204_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootTau), -1, 1, 1, 1, 1, 0, "u 'TRootTau' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootJet(void) {
   /* TRootJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet));
   G__memfunc_setup("GetCompare",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCompare), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_205_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRootJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_205_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_205_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRootJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_205_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRootJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_205_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_205_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_205_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_205_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRootJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_205_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRootJet::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TRootJet", 795, G__ExRootAnalysisDict_205_0_14, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TRootJet", 795, G__ExRootAnalysisDict_205_0_15, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet), -1, 0, 1, 1, 1, 0, "u 'TRootJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootJet", 921, G__ExRootAnalysisDict_205_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_205_0_17, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TRootJet), -1, 1, 1, 1, 1, 0, "u 'TRootJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootTreeReader(void) {
   /* ExRootTreeReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   G__memfunc_setup("ExRootTreeReader",1604,G__ExRootAnalysisDict_553_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__ExRootAnalysisDict_553_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__ExRootAnalysisDict_553_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEntry",910,G__ExRootAnalysisDict_553_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBranch",891,G__ExRootAnalysisDict_553_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClonesArray), -1, 0, 1, 1, 1, 0, "C - - 10 - branchName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_553_0_9, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootTreeReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_553_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_553_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootTreeReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_553_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootTreeReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_553_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_553_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_553_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_553_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_553_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootTreeReader", 1604, G__ExRootAnalysisDict_553_0_21, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader), -1, 0, 1, 1, 1, 0, "u 'ExRootTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTreeReader", 1730, G__ExRootAnalysisDict_553_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_553_0_23, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader), -1, 1, 1, 1, 1, 0, "u 'ExRootTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootTreeBranch(void) {
   /* ExRootTreeBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   G__memfunc_setup("ExRootTreeBranch",1599,G__ExRootAnalysisDict_619_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TClass' - 0 - cl "
"U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewEntry",828,G__ExRootAnalysisDict_619_0_2, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ExRootAnalysisDict_619_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootTreeBranch", 1599, G__ExRootAnalysisDict_619_0_4, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 1, 1, 1, 0, "u 'ExRootTreeBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTreeBranch", 1725, G__ExRootAnalysisDict_619_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_619_0_6, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 1, 1, 1, 1, 0, "u 'ExRootTreeBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootTreeWriter(void) {
   /* ExRootTreeWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   G__memfunc_setup("ExRootTreeWriter",1646,G__ExRootAnalysisDict_620_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter), -1, 0, 2, 1, 1, 0, 
"U 'TFile' - 0 '0' file C - - 10 '\"Analysis\"' treeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeFile",1084,G__ExRootAnalysisDict_620_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__ExRootAnalysisDict_620_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewBranch",888,G__ExRootAnalysisDict_620_0_4, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewFactory",1026,G__ExRootAnalysisDict_620_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ExRootAnalysisDict_620_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__ExRootAnalysisDict_620_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__ExRootAnalysisDict_620_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewTree",698,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTree), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_620_0_10, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootTreeWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_620_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_620_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootTreeWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_620_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootTreeWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_620_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_620_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_620_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_620_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_620_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootTreeWriter", 1646, G__ExRootAnalysisDict_620_0_22, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter), -1, 0, 1, 1, 1, 0, "u 'ExRootTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTreeWriter", 1772, G__ExRootAnalysisDict_620_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_620_0_24, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter), -1, 1, 1, 1, 1, 0, "u 'ExRootTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootResult(void) {
   /* ExRootResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   G__memfunc_setup("ExRootResult",1248,G__ExRootAnalysisDict_634_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ExRootAnalysisDict_634_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__ExRootAnalysisDict_634_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"results.root\"' fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ExRootAnalysisDict_634_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"eps\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHist1D",790,G__ExRootAnalysisDict_634_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TH1), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax i - 'Int_t' 0 '0' logx "
"i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHist1D",790,G__ExRootAnalysisDict_634_0_6, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TH1), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins F - 'Float_t' 10 - bins "
"i - 'Int_t' 0 '0' logx i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProfile",986,G__ExRootAnalysisDict_634_0_7, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TProfile), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax i - 'Int_t' 0 '0' logx "
"i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHist2D",791,G__ExRootAnalysisDict_634_0_8, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TH2), -1, 0, 12, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax i - 'Int_t' 0 - nybins "
"d - 'Axis_t' 0 - ymin d - 'Axis_t' 0 - ymax "
"i - 'Int_t' 0 '0' logx i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHistStack",1175,G__ExRootAnalysisDict_634_0_9, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_THStack), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLegend",856,G__ExRootAnalysisDict_634_0_10, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TLegend), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddComment",988,G__ExRootAnalysisDict_634_0_11, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TPaveText), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Attach",597,G__ExRootAnalysisDict_634_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - plot U 'TObject' - 0 - object", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvas",892,G__ExRootAnalysisDict_634_0_13, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPlot",940,G__ExRootAnalysisDict_634_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TObject' - 0 - plot C - - 10 '\"\"' sufix "
"C - - 10 '\"eps\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFolder",904,G__ExRootAnalysisDict_634_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFolder' - 0 - folder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateCanvas",1200,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootResult", 1248, G__ExRootAnalysisDict_634_0_17, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult), -1, 0, 1, 1, 1, 0, "u 'ExRootResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootResult", 1374, G__ExRootAnalysisDict_634_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_634_0_19, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult), -1, 1, 1, 1, 1, 0, "u 'ExRootResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootClassifier(void) {
   /* ExRootClassifier */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootClassifier));
   G__memfunc_setup("GetCategory",1118,G__ExRootAnalysisDict_657_0_1, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TObject' - 0 - object", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~ExRootClassifier", 1764, G__ExRootAnalysisDict_657_0_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_657_0_3, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootClassifier), -1, 1, 1, 1, 1, 0, "u 'ExRootClassifier' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootFilter(void) {
   /* ExRootFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   G__memfunc_setup("ExRootFilter",1223,G__ExRootAnalysisDict_658_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter), -1, 0, 1, 1, 1, 0, "U 'TSeqCollection' - 10 - collection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ExRootAnalysisDict_658_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ExRootClassifier' - 0 '0' classifier", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubArray",1097,G__ExRootAnalysisDict_658_0_3, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObjArray), -1, 0, 2, 1, 1, 0, 
"U 'ExRootClassifier' - 0 - classifier i - 'Int_t' 0 - category", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootFilter", 1223, G__ExRootAnalysisDict_658_0_4, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter), -1, 0, 1, 1, 1, 0, "u 'ExRootFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootFilter", 1349, G__ExRootAnalysisDict_658_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootProgressBar(void) {
   /* ExRootProgressBar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   G__memfunc_setup("ExRootProgressBar",1739,G__ExRootAnalysisDict_677_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar), -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entries i - 'Int_t' 0 '25' width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__ExRootAnalysisDict_677_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finish",609,G__ExRootAnalysisDict_677_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootProgressBar", 1739, G__ExRootAnalysisDict_677_0_4, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar), -1, 0, 1, 1, 1, 0, "u 'ExRootProgressBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootProgressBar", 1865, G__ExRootAnalysisDict_677_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_677_0_6, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar), -1, 1, 1, 1, 1, 0, "u 'ExRootProgressBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootConfReader(void) {
   /* ExRootConfReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   G__memfunc_setup("ExRootConfReader",1594,G__ExRootAnalysisDict_681_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__ExRootAnalysisDict_681_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__ExRootAnalysisDict_681_0_3, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLong",688,G__ExRootAnalysisDict_681_0_4, 108, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name l - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__ExRootAnalysisDict_681_0_5, 100, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name d - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBool",684,G__ExRootAnalysisDict_681_0_6, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name g - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__ExRootAnalysisDict_681_0_7, 67, -1, -1, 0, 3, 1, 1, 1, 
"C - - 10 - name C - - 10 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParam",785,G__ExRootAnalysisDict_681_0_8, 117, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModules",1017,G__ExRootAnalysisDict_681_0_9, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), G__defined_typename("ExRootConfReader::ExRootTaskMap"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddModule",879,G__ExRootAnalysisDict_681_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - className C - - 10 - moduleName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_681_0_11, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootConfReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_681_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootConfReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_681_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootConfReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_681_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootConfReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_681_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_681_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootConfReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_681_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootConfReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_681_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootConfReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_681_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootConfReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootConfReader", 1594, G__ExRootAnalysisDict_681_0_23, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader), -1, 0, 1, 1, 1, 0, "u 'ExRootConfReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootConfReader", 1720, G__ExRootAnalysisDict_681_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_681_0_25, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader), -1, 1, 1, 1, 1, 0, "u 'ExRootConfReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootTask(void) {
   /* ExRootTask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask));
   G__memfunc_setup("Init",404,G__ExRootAnalysisDict_690_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Event",514,G__ExRootAnalysisDict_690_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Finish",609,G__ExRootAnalysisDict_690_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("InitTask",807,G__ExRootAnalysisDict_690_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessEvent",1249,G__ExRootAnalysisDict_690_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishTask",1012,G__ExRootAnalysisDict_690_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTask' - 0 - task", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewTask",701,G__ExRootAnalysisDict_690_0_9, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 0, 2, 1, 1, 0, 
"U 'TClass' - 0 - cl C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewTask",701,G__ExRootAnalysisDict_690_0_10, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 0, 2, 1, 1, 0, 
"C - - 10 - className C - - 10 - taskName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInt",587,G__ExRootAnalysisDict_690_0_12, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLong",688,G__ExRootAnalysisDict_690_0_13, 108, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name l - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__ExRootAnalysisDict_690_0_14, 100, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name d - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBool",684,G__ExRootAnalysisDict_690_0_15, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name g - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__ExRootAnalysisDict_690_0_16, 67, -1, -1, 0, 3, 1, 1, 1, 
"C - - 10 - name C - - 10 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParam",785,G__ExRootAnalysisDict_690_0_17, 117, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFolder",904,G__ExRootAnalysisDict_690_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFolder' - 0 - folder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfReader",1285,G__ExRootAnalysisDict_690_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ExRootConfReader' - 0 - conf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFolder",892,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_690_0_21, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootTask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_690_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_690_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootTask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_690_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootTask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_690_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_690_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_690_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_690_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_690_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTask::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTask", 1138, G__ExRootAnalysisDict_690_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_690_0_34, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 1, 1, 1, 1, 0, "u 'ExRootTask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootFactory(void) {
   /* ExRootFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory));
   G__memfunc_setup("ExRootFactory",1337,G__ExRootAnalysisDict_691_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ExRootAnalysisDict_691_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewArray",809,G__ExRootAnalysisDict_691_0_3, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewPermanentArray",1747,G__ExRootAnalysisDict_691_0_4, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("New",298,G__ExRootAnalysisDict_691_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject), -1, 0, 1, 1, 1, 0, "U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_691_0_6, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_691_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_691_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_691_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_691_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_691_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_691_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_691_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_691_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootFactory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootFactory", 1337, G__ExRootAnalysisDict_691_0_18, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory), -1, 0, 1, 1, 1, 0, "u 'ExRootFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootFactory", 1463, G__ExRootAnalysisDict_691_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_691_0_20, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory), -1, 1, 1, 1, 1, 0, "u 'ExRootFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootAnalysis(void) {
   /* ExRootAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis));
   G__memfunc_setup("ExRootAnalysis",1445,G__ExRootAnalysisDict_692_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTclFileName",1360,G__ExRootAnalysisDict_692_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGFileName",1288,G__ExRootAnalysisDict_692_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__ExRootAnalysisDict_692_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,G__ExRootAnalysisDict_692_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__ExRootAnalysisDict_692_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__ExRootAnalysisDict_692_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_692_0_12, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_692_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_692_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_692_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_692_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_692_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_692_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_692_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_692_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootAnalysis", 1445, G__ExRootAnalysisDict_692_0_24, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis), -1, 0, 1, 1, 1, 0, "u 'ExRootAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootAnalysis", 1571, G__ExRootAnalysisDict_692_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_692_0_26, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootAnalysis), -1, 1, 1, 1, 1, 0, "u 'ExRootAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootModule(void) {
   /* ExRootModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Event",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ImportArray",1146,G__ExRootAnalysisDict_709_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObjArray), -1, 0, 1, 1, 1, 1, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExportArray",1153,G__ExRootAnalysisDict_709_0_6, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObjArray), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBranch",891,G__ExRootAnalysisDict_709_0_7, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClonesArray), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewBranch",888,G__ExRootAnalysisDict_709_0_8, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlots",818,G__ExRootAnalysisDict_709_0_9, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFactory",1016,G__ExRootAnalysisDict_709_0_10, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFactory), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewFolder",902,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder), -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject), -1, 0, 2, 1, 4, 0, 
"C - - 10 - name U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_709_0_13, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_709_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_709_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_709_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_709_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_709_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_709_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_709_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_709_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ExRootModule", 1349, G__ExRootAnalysisDict_709_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_709_0_26, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootModule), -1, 1, 1, 1, 1, 0, "u 'ExRootModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncExRootAnalysisDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalExRootAnalysisDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
   G__memfunc_setup("HistStyle", 937, G__ExRootAnalysisDict__0_2013, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - hist g - 'Bool_t' 0 'kTRUE' stats", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("FillChain", 874, G__ExRootAnalysisDict__0_2014, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TChain' - 0 - chain C - - 10 - inputFileList", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcExRootAnalysisDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ExRootAnalysisDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TCompare = { "TCompare" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TSortableObject = { "TSortableObject" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootLHEFEvent = { "TRootLHEFEvent" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootLHEFParticle = { "TRootLHEFParticle" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootGenEvent = { "TRootGenEvent" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootGenParticle = { "TRootGenParticle" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootGenJet = { "TRootGenJet" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootEvent = { "TRootEvent" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootMissingET = { "TRootMissingET" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootPhoton = { "TRootPhoton" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootElectron = { "TRootElectron" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootMuon = { "TRootMuon" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootTau = { "TRootTau" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TRootJet = { "TRootJet" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TFolder = { "TFolder" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTreeReader = { "ExRootTreeReader" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR = { "map<TString,pair<TBranch*,TClonesArray*>,less<TString>,allocator<pair<const TString,pair<TBranch*,TClonesArray*> > > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTreeBranch = { "ExRootTreeBranch" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTreeWriter = { "ExRootTreeWriter" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR = { "set<ExRootTreeBranch*,less<ExRootTreeBranch*>,allocator<ExRootTreeBranch*> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_THStack = { "THStack" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootResult = { "ExRootResult" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR = { "set<TObject*,less<TObject*>,allocator<TObject*> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplETObjectmUcOTObjArraymUcOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOTObjArraymUgRsPgRsPgR = { "map<TObject*,TObjArray*,less<TObject*>,allocator<pair<TObject* const,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR = { "map<TObject*,ExRootResult::PlotSettings,less<TObject*>,allocator<pair<TObject* const,ExRootResult::PlotSettings> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootClassifier = { "ExRootClassifier" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootFilter = { "ExRootFilter" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR = { "map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR = { "pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > >" , 115 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<ExRootClassifier*,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > >,less<ExRootClassifier*>,allocator<pair<ExRootClassifier* const,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > > > > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootProgressBar = { "ExRootProgressBar" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_Tcl_Interp = { "Tcl_Interp" , 115 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootConfParam = { "ExRootConfParam" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootConfReader = { "ExRootConfReader" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTask = { "ExRootTask" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootFactory = { "ExRootFactory" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootAnalysis = { "ExRootAnalysis" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplEconstsPTClassmUcOExRootTreeBranchmUcOlesslEconstsPTClassmUgRcOallocatorlEpairlEconstsPTClassmUsPconstcOExRootTreeBranchmUgRsPgRsPgR = { "map<const TClass*,ExRootTreeBranch*,less<const TClass*>,allocator<pair<const TClass* const,ExRootTreeBranch*> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_setlETObjArraymUcOlesslETObjArraymUgRcOallocatorlETObjArraymUgRsPgR = { "set<TObjArray*,less<TObjArray*>,allocator<TObjArray*> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootModule = { "ExRootModule" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableExRootAnalysisDict() {
  G__ExRootAnalysisDictLN_TClass.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TBuffer.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TMemberInspector.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TObject.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TNamed.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TString.tagnum = -1 ;
  G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TBrowser.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TObjArray.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TClonesArray.tagnum = -1 ;
  G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TFile.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TIterator.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TSeqCollection.tagnum = -1 ;
  G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TCompare.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TSortableObject.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootLHEFEvent.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootLHEFParticle.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootGenEvent.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootGenParticle.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootGenJet.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootEvent.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootMissingET.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootPhoton.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootElectron.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootMuon.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootTau.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TRootJet.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TCanvas.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TFolder.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TTree.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TH1.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TChain.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTreeReader.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTreeBranch.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTreeWriter.tagnum = -1 ;
  G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TH2.tagnum = -1 ;
  G__ExRootAnalysisDictLN_THStack.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TLegend.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TProfile.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TPaveText.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootResult.tagnum = -1 ;
  G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplETObjectmUcOTObjArraymUcOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootClassifier.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootFilter.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootProgressBar.tagnum = -1 ;
  G__ExRootAnalysisDictLN_Tcl_Interp.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootConfParam.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootConfReader.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TTask.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTask.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootFactory.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootAnalysis.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplEconstsPTClassmUcOExRootTreeBranchmUcOlesslEconstsPTClassmUgRcOallocatorlEpairlEconstsPTClassmUsPconstcOExRootTreeBranchmUgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_setlETObjArraymUcOlesslETObjArraymUgRcOallocatorlETObjArraymUgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootModule.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableExRootAnalysisDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TString);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TIterator);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TCompare);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TSortableObject),sizeof(TSortableObject),-1,290817,(char*)NULL,G__setup_memvarTSortableObject,G__setup_memfuncTSortableObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootLHEFEvent),sizeof(TRootLHEFEvent),-1,290816,(char*)NULL,G__setup_memvarTRootLHEFEvent,G__setup_memfuncTRootLHEFEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootLHEFParticle),sizeof(TRootLHEFParticle),-1,290816,(char*)NULL,G__setup_memvarTRootLHEFParticle,G__setup_memfuncTRootLHEFParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootGenEvent),sizeof(TRootGenEvent),-1,290816,(char*)NULL,G__setup_memvarTRootGenEvent,G__setup_memfuncTRootGenEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootGenParticle),sizeof(TRootGenParticle),-1,290816,(char*)NULL,G__setup_memvarTRootGenParticle,G__setup_memfuncTRootGenParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootGenJet),sizeof(TRootGenJet),-1,290816,(char*)NULL,G__setup_memvarTRootGenJet,G__setup_memfuncTRootGenJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootEvent),sizeof(TRootEvent),-1,290816,(char*)NULL,G__setup_memvarTRootEvent,G__setup_memfuncTRootEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootMissingET),sizeof(TRootMissingET),-1,290816,(char*)NULL,G__setup_memvarTRootMissingET,G__setup_memfuncTRootMissingET);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootPhoton),sizeof(TRootPhoton),-1,290816,(char*)NULL,G__setup_memvarTRootPhoton,G__setup_memfuncTRootPhoton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootElectron),sizeof(TRootElectron),-1,290816,(char*)NULL,G__setup_memvarTRootElectron,G__setup_memfuncTRootElectron);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootMuon),sizeof(TRootMuon),-1,290816,(char*)NULL,G__setup_memvarTRootMuon,G__setup_memfuncTRootMuon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootTau),sizeof(TRootTau),-1,290816,(char*)NULL,G__setup_memvarTRootTau,G__setup_memfuncTRootTau);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TRootJet),sizeof(TRootJet),-1,290816,(char*)NULL,G__setup_memvarTRootJet,G__setup_memfuncTRootJet);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TFolder);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTreeReader),sizeof(ExRootTreeReader),-1,324864,(char*)NULL,G__setup_memvarExRootTreeReader,G__setup_memfuncExRootTreeReader);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTreeBranch),sizeof(ExRootTreeBranch),-1,295936,(char*)NULL,G__setup_memvarExRootTreeBranch,G__setup_memfuncExRootTreeBranch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTreeWriter),sizeof(ExRootTreeWriter),-1,324864,(char*)NULL,G__setup_memvarExRootTreeWriter,G__setup_memfuncExRootTreeWriter);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TH2);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_THStack);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TLegend);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TProfile);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TPaveText);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootResult),sizeof(ExRootResult),-1,263424,(char*)NULL,G__setup_memvarExRootResult,G__setup_memfuncExRootResult);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplETObjectmUcOTObjArraymUcOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootClassifier),sizeof(ExRootClassifier),-1,262145,(char*)NULL,G__setup_memvarExRootClassifier,G__setup_memfuncExRootClassifier);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootFilter),sizeof(ExRootFilter),-1,295936,(char*)NULL,G__setup_memvarExRootFilter,G__setup_memfuncExRootFilter);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootProgressBar),sizeof(ExRootProgressBar),-1,295936,(char*)NULL,G__setup_memvarExRootProgressBar,G__setup_memfuncExRootProgressBar);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_Tcl_Interp);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootConfParam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootConfReader),sizeof(ExRootConfReader),-1,324864,(char*)NULL,G__setup_memvarExRootConfReader,G__setup_memfuncExRootConfReader);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTask),sizeof(ExRootTask),-1,324867,(char*)NULL,G__setup_memvarExRootTask,G__setup_memfuncExRootTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootFactory),sizeof(ExRootFactory),-1,324864,(char*)NULL,G__setup_memvarExRootFactory,G__setup_memfuncExRootFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootAnalysis),sizeof(ExRootAnalysis),-1,324864,(char*)NULL,G__setup_memvarExRootAnalysis,G__setup_memfuncExRootAnalysis);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplEconstsPTClassmUcOExRootTreeBranchmUcOlesslEconstsPTClassmUgRcOallocatorlEpairlEconstsPTClassmUsPconstcOExRootTreeBranchmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_setlETObjArraymUcOlesslETObjArraymUgRcOallocatorlETObjArraymUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootModule),sizeof(ExRootModule),-1,324867,(char*)NULL,G__setup_memvarExRootModule,G__setup_memfuncExRootModule);
}
extern "C" void G__cpp_setupExRootAnalysisDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupExRootAnalysisDict()");
  G__set_cpp_environmentExRootAnalysisDict();
  G__cpp_setup_tagtableExRootAnalysisDict();

  G__cpp_setup_inheritanceExRootAnalysisDict();

  G__cpp_setup_typetableExRootAnalysisDict();

  G__cpp_setup_memvarExRootAnalysisDict();

  G__cpp_setup_memfuncExRootAnalysisDict();
  G__cpp_setup_globalExRootAnalysisDict();
  G__cpp_setup_funcExRootAnalysisDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncExRootAnalysisDict();
  return;
}
class G__cpp_setup_initExRootAnalysisDict {
  public:
    G__cpp_setup_initExRootAnalysisDict() { G__add_setup_func("ExRootAnalysisDict",(G__incsetup)(&G__cpp_setupExRootAnalysisDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initExRootAnalysisDict() { G__remove_setup_func("ExRootAnalysisDict"); }
};
G__cpp_setup_initExRootAnalysisDict G__cpp_setup_initializerExRootAnalysisDict;

