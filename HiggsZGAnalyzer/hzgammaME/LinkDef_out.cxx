#include "TEvtProb.hh"
#include "TMCFM.hh"
#include "TUtil.hh"
#include "TVar.hh"

#ifdef __CINT__
#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;

// #pragma link C++ function ScanChain(TChain*, enum Sample, double, bool);
#pragma link C++  nestedclasses;
#pragma link C++  nestedtypedefs;

#pragma link C++  class  TVar;
#pragma link C++  class  TEvtProb;
#pragma link C++  function SumMatrixElementPDF;



#endif
//
// File generated by rootcint at Tue Sep  3 12:11:26 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME LinkDef_out
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LinkDef_out.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TVar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TVar(void *p = 0);
   static void *newArray_TVar(Long_t size, void *p);
   static void delete_TVar(void *p);
   static void deleteArray_TVar(void *p);
   static void destruct_TVar(void *p);
   static void streamer_TVar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVar*)
   {
      ::TVar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVar", ::TVar::Class_Version(), "./TVar.hh", 14,
                  typeid(::TVar), DefineBehavior(ptr, ptr),
                  &::TVar::Dictionary, isa_proxy, 0,
                  sizeof(::TVar) );
      instance.SetNew(&new_TVar);
      instance.SetNewArray(&newArray_TVar);
      instance.SetDelete(&delete_TVar);
      instance.SetDeleteArray(&deleteArray_TVar);
      instance.SetDestructor(&destruct_TVar);
      instance.SetStreamerFunc(&streamer_TVar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVar*)
   {
      return GenerateInitInstanceLocal((::TVar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEvtProb_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEvtProb(void *p = 0);
   static void *newArray_TEvtProb(Long_t size, void *p);
   static void delete_TEvtProb(void *p);
   static void deleteArray_TEvtProb(void *p);
   static void destruct_TEvtProb(void *p);
   static void streamer_TEvtProb(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEvtProb*)
   {
      ::TEvtProb *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEvtProb >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEvtProb", ::TEvtProb::Class_Version(), "./TEvtProb.hh", 40,
                  typeid(::TEvtProb), DefineBehavior(ptr, ptr),
                  &::TEvtProb::Dictionary, isa_proxy, 0,
                  sizeof(::TEvtProb) );
      instance.SetNew(&new_TEvtProb);
      instance.SetNewArray(&newArray_TEvtProb);
      instance.SetDelete(&delete_TEvtProb);
      instance.SetDeleteArray(&deleteArray_TEvtProb);
      instance.SetDestructor(&destruct_TEvtProb);
      instance.SetStreamerFunc(&streamer_TEvtProb);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEvtProb*)
   {
      return GenerateInitInstanceLocal((::TEvtProb*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEvtProb*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TVar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVar::Class_Name()
{
   return "TVar";
}

//______________________________________________________________________________
const char *TVar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEvtProb::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEvtProb::Class_Name()
{
   return "TEvtProb";
}

//______________________________________________________________________________
const char *TEvtProb::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEvtProb*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEvtProb::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEvtProb*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEvtProb::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEvtProb*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEvtProb::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEvtProb*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TVar::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVar.

   ::Error("TVar::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TVar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TVar.
      TClass *R__cl = ::TVar::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TVar(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TVar : new ::TVar;
   }
   static void *newArray_TVar(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TVar[nElements] : new ::TVar[nElements];
   }
   // Wrapper around operator delete
   static void delete_TVar(void *p) {
      delete ((::TVar*)p);
   }
   static void deleteArray_TVar(void *p) {
      delete [] ((::TVar*)p);
   }
   static void destruct_TVar(void *p) {
      typedef ::TVar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TVar(TBuffer &buf, void *obj) {
      ((::TVar*)obj)->::TVar::Streamer(buf);
   }
} // end of namespace ROOT for class ::TVar

//______________________________________________________________________________
void TEvtProb::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEvtProb.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TEvtProb::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEvtProb.
      TClass *R__cl = ::TEvtProb::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_process", &_process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_matrixElement", &_matrixElement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_production", &_production);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myCSW_", &myCSW_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hmass", &_hmass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hwidth", &_hwidth);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEvtProb(void *p) {
      return  p ? new(p) ::TEvtProb : new ::TEvtProb;
   }
   static void *newArray_TEvtProb(Long_t nElements, void *p) {
      return p ? new(p) ::TEvtProb[nElements] : new ::TEvtProb[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEvtProb(void *p) {
      delete ((::TEvtProb*)p);
   }
   static void deleteArray_TEvtProb(void *p) {
      delete [] ((::TEvtProb*)p);
   }
   static void destruct_TEvtProb(void *p) {
      typedef ::TEvtProb current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TEvtProb(TBuffer &buf, void *obj) {
      ((::TEvtProb*)obj)->::TEvtProb::Streamer(buf);
   }
} // end of namespace ROOT for class ::TEvtProb

/********************************************************
* LinkDef_out.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLinkDef_out();

extern "C" void G__set_cpp_environmentLinkDef_out() {
  G__cpp_reset_tagtableLinkDef_out();
}
#include <new>
extern "C" int G__cpp_dllrevLinkDef_out() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TVar */
static int G__LinkDef_out_623_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TVar::ProcessName((int) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVar*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVar*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVar*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_623_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__LinkDef_out_623_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVar *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVar[n];
     } else {
       p = new((void*) gvp) TVar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVar;
     } else {
       p = new((void*) gvp) TVar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDef_outLN_TVar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_out_623_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TVar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TVar(*(TVar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDef_outLN_TVar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVar G__TTVar;
static int G__LinkDef_out_623_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVar*) (soff+(sizeof(TVar)*i)))->~G__TTVar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVar*) (soff))->~G__TTVar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_out_623_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVar* dest = (TVar*) G__getstructoffset();
   *dest = *(TVar*) libp->para[0].ref;
   const TVar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEvtProb */
static int G__LinkDef_out_697_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEvtProb* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEvtProb[n];
     } else {
       p = new((void*) gvp) TEvtProb[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEvtProb;
     } else {
       p = new((void*) gvp) TEvtProb;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvtProb*) G__getstructoffset())->SetProcess((TVar::Process) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvtProb*) G__getstructoffset())->SetMatrixElement((TVar::MatrixElement) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvtProb*) G__getstructoffset())->SetProduction((TVar::Production) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEvtProb*) G__getstructoffset())->XsecCalc((TVar::Process) G__int(libp->para[0]), (TVar::Production) G__int(libp->para[1])
, *(hzgamma_event_type*) libp->para[2].ref, (bool) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvtProb*) G__getstructoffset())->SetHiggsMass((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEvtProb::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEvtProb::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEvtProb::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEvtProb::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvtProb*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEvtProb::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEvtProb::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEvtProb::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_697_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEvtProb::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_out_697_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEvtProb* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEvtProb(*(TEvtProb*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEvtProb G__TTEvtProb;
static int G__LinkDef_out_697_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEvtProb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEvtProb*) (soff+(sizeof(TEvtProb)*i)))->~G__TTEvtProb();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEvtProb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEvtProb*) (soff))->~G__TTEvtProb();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_out_697_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEvtProb* dest = (TEvtProb*) G__getstructoffset();
   *dest = *(TEvtProb*) libp->para[0].ref;
   const TEvtProb& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__LinkDef_out__0_1936(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { double a[1][11]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
      G__letdouble(result7, 100, (double) SumMatrixElementPDF((TVar::Process) G__int(libp->para[0]), (mcfm_event_type*) G__int(libp->para[1])
, G__Ap2->a, (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TVar */

/* TEvtProb */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLinkDef_out {
 public:
  G__Sizep2memfuncLinkDef_out(): p(&G__Sizep2memfuncLinkDef_out::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLinkDef_out::*p)();
};

size_t G__get_sizep2memfuncLinkDef_out()
{
  G__Sizep2memfuncLinkDef_out a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLinkDef_out() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb))) {
     TEvtProb *G__Lderived;
     G__Lderived=(TEvtProb*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb),G__get_linked_tagnum(&G__LinkDef_outLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLinkDef_out() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TVar */
static void G__setup_memvarTVar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDef_outLN_TVar));
   { TVar *p; p=(TVar*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLVerbosityLevel),-1,-2,1,G__FastAllocString(4096).Format("ERROR=%lldLL",(long long)TVar::ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLVerbosityLevel),-1,-2,1,G__FastAllocString(4096).Format("INFO=%lldLL",(long long)TVar::INFO).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLVerbosityLevel),-1,-2,1,G__FastAllocString(4096).Format("DEBUG=%lldLL",(long long)TVar::DEBUG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLMatrixElement),-1,-2,1,G__FastAllocString(4096).Format("MCFM=%lldLL",(long long)TVar::MCFM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProduction),-1,-2,1,G__FastAllocString(4096).Format("GG=%lldLL",(long long)TVar::GG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProduction),-1,-2,1,G__FastAllocString(4096).Format("QQB=%lldLL",(long long)TVar::QQB).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProduction),-1,-2,1,G__FastAllocString(4096).Format("INDEPENDENT=%lldLL",(long long)TVar::INDEPENDENT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProcess),-1,-2,1,G__FastAllocString(4096).Format("qqb_zgam=%lldLL",(long long)TVar::qqb_zgam).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProcess),-1,-2,1,G__FastAllocString(4096).Format("gg_hzgam=%lldLL",(long long)TVar::gg_hzgam).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProcess),-1,-2,1,G__FastAllocString(4096).Format("Null=%lldLL",(long long)TVar::Null).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLLeptonFlavor),-1,-2,1,G__FastAllocString(4096).Format("Flavor_Dummy=%lldLL",(long long)TVar::Flavor_Dummy).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLLeptonFlavor),-1,-2,1,G__FastAllocString(4096).Format("Flavor_2e=%lldLL",(long long)TVar::Flavor_2e).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLLeptonFlavor),-1,-2,1,G__FastAllocString(4096).Format("Flavor_2mu=%lldLL",(long long)TVar::Flavor_2mu).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEvtProb */
static void G__setup_memvarTEvtProb(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb));
   { TEvtProb *p; p=(TEvtProb*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_process)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProcess),-1,-1,1,"_process=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_matrixElement)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLMatrixElement),-1,-1,1,"_matrixElement=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_production)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_TVarcLcLProduction),-1,-1,1,"_production=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->myCSW_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_HiggsCSandWidth),-1,-1,1,"myCSW_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hmass)-(long)(p)),100,0,0,-1,-1,-1,1,"_hmass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hwidth)-(long)(p)),100,0,0,-1,-1,-1,1,"_hwidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLinkDef_out() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTVar(void) {
   /* TVar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDef_outLN_TVar));
   G__memfunc_setup("ProcessName",1120,G__LinkDef_out_623_0_1, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 1, 3, 1, 0, "i - - 0 - temp", (char*)NULL, (void*) G__func2void( (TString (*)(int))(&TVar::ProcessName) ), 0);
   G__memfunc_setup("Class",502,G__LinkDef_out_623_0_2, 85, G__get_linked_tagnum(&G__LinkDef_outLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_out_623_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_out_623_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_out_623_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_out_623_0_6, 85, G__get_linked_tagnum(&G__LinkDef_outLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_out_623_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_out_623_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_out_623_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_out_623_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_out_623_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_out_623_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_out_623_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVar::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TVar", 381, G__LinkDef_out_623_0_14, (int) ('i'), G__get_linked_tagnum(&G__LinkDef_outLN_TVar), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TVar", 381, G__LinkDef_out_623_0_15, (int) ('i'), G__get_linked_tagnum(&G__LinkDef_outLN_TVar), -1, 0, 1, 1, 1, 0, "u 'TVar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TVar", 507, G__LinkDef_out_623_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_out_623_0_17, (int) ('u'), G__get_linked_tagnum(&G__LinkDef_outLN_TVar), -1, 1, 1, 1, 1, 0, "u 'TVar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEvtProb(void) {
   /* TEvtProb */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb));
   G__memfunc_setup("TEvtProb",790,G__LinkDef_out_697_0_1, 105, G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcess",1035,G__LinkDef_out_697_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TVar::Process' - 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMatrixElement",1643,G__LinkDef_out_697_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TVar::MatrixElement' - 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProduction",1363,G__LinkDef_out_697_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TVar::Production' - 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XsecCalc",774,G__LinkDef_out_697_0_5, 100, -1, -1, 0, 4, 1, 1, 0, 
"i 'TVar::Process' - 0 - proc i 'TVar::Production' - 0 - production "
"u 'hzgamma_event_type' - 11 - hzgamma_event g - - 0 - verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiggsMass",1202,G__LinkDef_out_697_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_out_697_0_7, 85, G__get_linked_tagnum(&G__LinkDef_outLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEvtProb::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_out_697_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEvtProb::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_out_697_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEvtProb::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_out_697_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEvtProb::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LinkDef_outLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_out_697_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_out_697_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEvtProb::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_out_697_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEvtProb::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_out_697_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEvtProb::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_out_697_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEvtProb::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEvtProb", 790, G__LinkDef_out_697_0_19, (int) ('i'), G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb), -1, 0, 1, 1, 1, 0, "u 'TEvtProb' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEvtProb", 916, G__LinkDef_out_697_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_out_697_0_21, (int) ('u'), G__get_linked_tagnum(&G__LinkDef_outLN_TEvtProb), -1, 1, 1, 1, 1, 0, "u 'TEvtProb' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLinkDef_out() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLinkDef_out() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
   G__memfunc_setup("SumMatrixElementPDF", 1870, G__LinkDef_out__0_1936, 100, -1, -1, 0, 4, 1, 1, 0, 
"i 'TVar::Process' - 0 - procees U 'mcfm_event_type' - 0 - mcfm_event "
"D - - 2 - flavor_msq D - - 0 - flux", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLinkDef_out() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LinkDef_outLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVar = { "TVar" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVarcLcLVerbosityLevel = { "TVar::VerbosityLevel" , 101 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVarcLcLMatrixElement = { "TVar::MatrixElement" , 101 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVarcLcLProduction = { "TVar::Production" , 101 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVarcLcLProcess = { "TVar::Process" , 101 , -1 };
G__linked_taginfo G__LinkDef_outLN_TVarcLcLLeptonFlavor = { "TVar::LeptonFlavor" , 101 , -1 };
G__linked_taginfo G__LinkDef_outLN_hzgamma_event_type = { "hzgamma_event_type" , 115 , -1 };
G__linked_taginfo G__LinkDef_outLN_mcfm_event_type = { "mcfm_event_type" , 115 , -1 };
G__linked_taginfo G__LinkDef_outLN_HiggsCSandWidth = { "HiggsCSandWidth" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TEvtProb = { "TEvtProb" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLinkDef_out() {
  G__LinkDef_outLN_TClass.tagnum = -1 ;
  G__LinkDef_outLN_TBuffer.tagnum = -1 ;
  G__LinkDef_outLN_TMemberInspector.tagnum = -1 ;
  G__LinkDef_outLN_TObject.tagnum = -1 ;
  G__LinkDef_outLN_TString.tagnum = -1 ;
  G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__LinkDef_outLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__LinkDef_outLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_TVar.tagnum = -1 ;
  G__LinkDef_outLN_TVarcLcLVerbosityLevel.tagnum = -1 ;
  G__LinkDef_outLN_TVarcLcLMatrixElement.tagnum = -1 ;
  G__LinkDef_outLN_TVarcLcLProduction.tagnum = -1 ;
  G__LinkDef_outLN_TVarcLcLProcess.tagnum = -1 ;
  G__LinkDef_outLN_TVarcLcLLeptonFlavor.tagnum = -1 ;
  G__LinkDef_outLN_hzgamma_event_type.tagnum = -1 ;
  G__LinkDef_outLN_mcfm_event_type.tagnum = -1 ;
  G__LinkDef_outLN_HiggsCSandWidth.tagnum = -1 ;
  G__LinkDef_outLN_TEvtProb.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLinkDef_out() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TClass);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TObject);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TString);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVar),sizeof(TVar),-1,0,(char*)NULL,G__setup_memvarTVar,G__setup_memfuncTVar);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVarcLcLVerbosityLevel);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVarcLcLMatrixElement);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVarcLcLProduction);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVarcLcLProcess);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TVarcLcLLeptonFlavor);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_hzgamma_event_type);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_mcfm_event_type);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_HiggsCSandWidth);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TEvtProb),sizeof(TEvtProb),-1,29952,(char*)NULL,G__setup_memvarTEvtProb,G__setup_memfuncTEvtProb);
}
extern "C" void G__cpp_setupLinkDef_out(void) {
  G__check_setup_version(30051515,"G__cpp_setupLinkDef_out()");
  G__set_cpp_environmentLinkDef_out();
  G__cpp_setup_tagtableLinkDef_out();

  G__cpp_setup_inheritanceLinkDef_out();

  G__cpp_setup_typetableLinkDef_out();

  G__cpp_setup_memvarLinkDef_out();

  G__cpp_setup_memfuncLinkDef_out();
  G__cpp_setup_globalLinkDef_out();
  G__cpp_setup_funcLinkDef_out();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLinkDef_out();
  return;
}
class G__cpp_setup_initLinkDef_out {
  public:
    G__cpp_setup_initLinkDef_out() { G__add_setup_func("LinkDef_out",(G__incsetup)(&G__cpp_setupLinkDef_out)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLinkDef_out() { G__remove_setup_func("LinkDef_out"); }
};
G__cpp_setup_initLinkDef_out G__cpp_setup_initializerLinkDef_out;

